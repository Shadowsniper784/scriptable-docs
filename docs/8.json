{"pageId":8,"details":[{"id":625,"headline":"Type","shortName":"UITable","longName":"UITable","detailsSections":[{"title":"Properties","details":[{"id":626,"headline":"Instance property","shortName":"showSeparators","longName":"showSeparators","subtitle":"bool","decleration":"showSeparators: bool","copyDecleration":"showSeparators","summary":"Whether to show separators.","description":"Whether to show separators between rows. Defaults to false.","url":"https://docs.scriptable.app/uitable/#showseparators","characteristics":[]}]},{"title":"Methods","details":[{"id":627,"headline":"Instance method","shortName":"new UITable","longName":"new UITable()","decleration":"new UITable()","copyDecleration":"new UITable()","summary":"Constructs a table.","description":"Use a table to present data in a structured manner.","url":"https://docs.scriptable.app/uitable/#-new-uitable"},{"id":628,"headline":"Instance method","shortName":"addRow","longName":"-addRow(row)","decleration":"addRow(row: UITableRow)","copyDecleration":"addRow(row)","summary":"Adds a row.","description":"Adds a row to the table. Rows are shown vertically in the table view, i.e. from the top and down. Rows are rendered in the order they are added.","infoSections":[{"title":"Parameters","infos":[{"title":"row","subtitle":"UITableRow","copyDecleration":"row","description":"Row to add."}]}],"url":"https://docs.scriptable.app/uitable/#-addrow"},{"id":632,"headline":"Instance method","shortName":"present","longName":"-present(fullscreen)","decleration":"present(fullscreen: bool): Promise","copyDecleration":"present(fullscreen)","summary":"Presents the table.","infoSections":[{"title":"Parameters","infos":[{"title":"fullscreen","subtitle":"bool","copyDecleration":"fullscreen","description":"Optional. Set to true to present the web view in fullscreen. This only has an effect when used within the app. Defaults to false."}]},{"title":"Return value","infos":[{"subtitle":"Promise","description":"Promise that is fulfilled when the table is dismissed."}]}],"url":"https://docs.scriptable.app/uitable/#-present"},{"id":631,"headline":"Instance method","shortName":"reload","longName":"-reload()","decleration":"reload()","copyDecleration":"reload()","summary":"Reloads the table.","description":"If you add or remove rows while a table view is presented, you must reload the table in order for the changes to take effect.","url":"https://docs.scriptable.app/uitable/#-reload"},{"id":630,"headline":"Instance method","shortName":"removeAllRows","longName":"-removeAllRows()","decleration":"removeAllRows()","copyDecleration":"removeAllRows()","summary":"Removes all rows.","description":"Removes all rows from the table. If the table is presented, you must call the <code>reload</code> function in order for the changes to be reflected visually.","url":"https://docs.scriptable.app/uitable/#-removeallrows"},{"id":629,"headline":"Instance method","shortName":"removeRow","longName":"-removeRow(row)","decleration":"removeRow(row: UITableRow)","copyDecleration":"removeRow(row)","summary":"Removes a row.","description":"Removes a row from the table.","infoSections":[{"title":"Parameters","infos":[{"title":"row","subtitle":"UITableRow","copyDecleration":"row","description":"Row to remove."}]}],"url":"https://docs.scriptable.app/uitable/#-removerow"}]}],"summary":"Renders a table.","description":"Tables present data in a structured manner. A table contains rows which in turn contains cells.","url":"https://docs.scriptable.app/uitable","pageId":8},{"id":633,"headline":"Type","shortName":"UITableCell","longName":"UITableCell","detailsSections":[{"title":"Properties","details":[{"id":636,"headline":"Instance property","shortName":"dismissOnTap","longName":"dismissOnTap","subtitle":"bool","decleration":"dismissOnTap: bool","copyDecleration":"dismissOnTap","summary":"Whether to dismiss the table when the button is tapped.","description":"Defaults to false.","url":"https://docs.scriptable.app/uitablecell/#dismissontap","characteristics":[]},{"id":635,"headline":"Instance property","shortName":"onTap","longName":"onTap","subtitle":"fn()","decleration":"onTap: fn()","copyDecleration":"onTap","summary":"Called when the button is tapped.","description":"Buttons cannot be tapped when the table is presented in Siri.","url":"https://docs.scriptable.app/uitablecell/#ontap","characteristics":[]},{"id":638,"headline":"Instance property","shortName":"subtitleColor","longName":"subtitleColor","subtitle":"Color","decleration":"subtitleColor: Color","copyDecleration":"subtitleColor","summary":"Color of the subtitle.","description":"This only has an effect on cells with a subtitle. By default the color is null, in which case an appropriate color is automatically chosen based on the theme of the app and the context the script is running in.","url":"https://docs.scriptable.app/uitablecell/#subtitlecolor","characteristics":[]},{"id":640,"headline":"Instance property","shortName":"subtitleFont","longName":"subtitleFont","subtitle":"Font","decleration":"subtitleFont: Font","copyDecleration":"subtitleFont","summary":"Font of the subtitle.","url":"https://docs.scriptable.app/uitablecell/#subtitlefont","characteristics":[]},{"id":637,"headline":"Instance property","shortName":"titleColor","longName":"titleColor","subtitle":"Color","decleration":"titleColor: Color","copyDecleration":"titleColor","summary":"Color of the title.","description":"This only has an effect on cells with a title. By default the color is null, in which case an appropriate color is automatically chosen based on the theme of the app and the context the script is running in.","url":"https://docs.scriptable.app/uitablecell/#titlecolor","characteristics":[]},{"id":639,"headline":"Instance property","shortName":"titleFont","longName":"titleFont","subtitle":"Font","decleration":"titleFont: Font","copyDecleration":"titleFont","summary":"Font of the title.","url":"https://docs.scriptable.app/uitablecell/#titlefont","characteristics":[]},{"id":634,"headline":"Instance property","shortName":"widthWeight","longName":"widthWeight","subtitle":"number","decleration":"widthWeight: number","copyDecleration":"widthWeight","summary":"Relative width of the cell.","description":"A width weight specifies the relative width of the cell. When computing the absolute width of the cell, all width weights are taken into account. Consider the following example.\n\nCell A has a width weight of 50.\nCell B has a width weight of 100.\nCell C has a width wegiht of 150.\n\nAssume that the row has an absolute width of 100. The width will be distributed among cells A, B and C. B will be double as wide as A but C will be fifty percent wider than B and three times as wide as A.","url":"https://docs.scriptable.app/uitablecell/#widthweight","characteristics":[]}]},{"title":"Methods","details":[{"id":644,"headline":"Static method","shortName":"button","longName":"+button(title)","decleration":"static button(title: string): UITableCell","copyDecleration":"button(title)","summary":"Constructs a button cell.","description":"Constructs a new cell that contains a button. Set the <code>onTap</code> property to specify an action to performed when the button is tapped.","infoSections":[{"title":"Parameters","infos":[{"title":"title","subtitle":"string","copyDecleration":"title","description":"Title of the button."}]},{"title":"Return value","infos":[{"subtitle":"UITableCell","description":"Constructed cell."}]}],"url":"https://docs.scriptable.app/uitablecell/#button"},{"id":646,"headline":"Instance method","shortName":"centerAligned","longName":"-centerAligned()","decleration":"centerAligned()","copyDecleration":"centerAligned()","summary":"Center aligns content.","description":"Specifies that content in the cell should be center aligned.","url":"https://docs.scriptable.app/uitablecell/#-centeraligned"},{"id":642,"headline":"Static method","shortName":"image","longName":"+image(image)","decleration":"static image(image: Image): UITableCell","copyDecleration":"image(image)","summary":"Constructs an image cell.","description":"Constructs a new cell containing an image.","infoSections":[{"title":"Parameters","infos":[{"title":"image","subtitle":"Image","copyDecleration":"image","description":"Image to show in the cell."}]},{"title":"Return value","infos":[{"subtitle":"UITableCell","description":"Constructed cell."}]}],"url":"https://docs.scriptable.app/uitablecell/#image"},{"id":643,"headline":"Static method","shortName":"imageAtURL","longName":"+imageAtURL(url)","decleration":"static imageAtURL(url: string): UITableCell","copyDecleration":"imageAtURL(url)","summary":"Constructs an image cell.","description":"Constructs a new cell that loads the image at the specified URL.","infoSections":[{"title":"Parameters","infos":[{"title":"url","subtitle":"string","copyDecleration":"url","description":"URL to image."}]},{"title":"Return value","infos":[{"subtitle":"UITableCell","description":"Constructed cell."}]}],"url":"https://docs.scriptable.app/uitablecell/#imageaturl"},{"id":645,"headline":"Instance method","shortName":"leftAligned","longName":"-leftAligned()","decleration":"leftAligned()","copyDecleration":"leftAligned()","summary":"Left aligns content.","description":"Specifies that content in the cell should be left aligned.","url":"https://docs.scriptable.app/uitablecell/#-leftaligned"},{"id":647,"headline":"Instance method","shortName":"rightAligned","longName":"-rightAligned()","decleration":"rightAligned()","copyDecleration":"rightAligned()","summary":"Right aligns content.","description":"Specifies that content in the cell should be right aligned.","url":"https://docs.scriptable.app/uitablecell/#-rightaligned"},{"id":641,"headline":"Static method","shortName":"text","longName":"+text(title, subtitle)","decleration":"static text(title: string, subtitle: string): UITableCell","copyDecleration":"text(title, subtitle)","summary":"Constructs a text cell.","description":"Constructs a new cell containing text.","infoSections":[{"title":"Parameters","infos":[{"title":"title","subtitle":"string","copyDecleration":"title","description":"Optional title to show in the cell."},{"title":"subtitle","subtitle":"string","copyDecleration":"subtitle","description":"Optional subtitle shown below the title."}]},{"title":"Return value","infos":[{"subtitle":"UITableCell","description":"Constructed cell."}]}],"url":"https://docs.scriptable.app/uitablecell/#text"}]}],"summary":"Cell in a UITableRow.","description":"Cells are shown horizontally in a UITableRow which in turn is shown\nvertically in a UITable. Cells have content, e.g. a text or an image.","url":"https://docs.scriptable.app/uitablecell","pageId":8},{"id":648,"headline":"Type","shortName":"UITableRow","longName":"UITableRow","detailsSections":[{"title":"Properties","details":[{"id":654,"headline":"Instance property","shortName":"backgroundColor","longName":"backgroundColor","subtitle":"Color","decleration":"backgroundColor: Color","copyDecleration":"backgroundColor","summary":"Background color.","url":"https://docs.scriptable.app/uitablerow/#backgroundcolor","characteristics":[]},{"id":649,"headline":"Instance property","shortName":"cellSpacing","longName":"cellSpacing","subtitle":"number","decleration":"cellSpacing: number","copyDecleration":"cellSpacing","summary":"Spacing between cells.","description":"Specifies the horizontal spacing between cells in the row.","url":"https://docs.scriptable.app/uitablerow/#cellspacing","characteristics":[]},{"id":652,"headline":"Instance property","shortName":"dismissOnSelect","longName":"dismissOnSelect","subtitle":"bool","decleration":"dismissOnSelect: bool","copyDecleration":"dismissOnSelect","summary":"Whether to dismiss the table when the row is selected.","description":"This property will only have an effect if the row is selectable, i.e. <code>onSelect</code> has a value. Otherwise it is ignored.\n\nDefaults to true.","url":"https://docs.scriptable.app/uitablerow/#dismissonselect","characteristics":[]},{"id":650,"headline":"Instance property","shortName":"height","longName":"height","subtitle":"number","decleration":"height: number","copyDecleration":"height","summary":"Height of the row.","description":"The height of the row defaults to 44.","url":"https://docs.scriptable.app/uitablerow/#height","characteristics":[]},{"id":651,"headline":"Instance property","shortName":"isHeader","longName":"isHeader","subtitle":"bool","decleration":"isHeader: bool","copyDecleration":"isHeader","summary":"Whether the cell is a header.","description":"Headers are highlighted cells that helps users understand context. Defaults to false.","url":"https://docs.scriptable.app/uitablerow/#isheader","characteristics":[]},{"id":653,"headline":"Instance property","shortName":"onSelect","longName":"onSelect","subtitle":"fn(number)","decleration":"onSelect: fn(number)","copyDecleration":"onSelect","summary":"Called when the row is selected.","description":"Called when the row is selected when the table is presented. If this has no value, the row cannot be selected. Defaults to null.\n\nRows cannot be tapped when the tables is presented in Siri.","url":"https://docs.scriptable.app/uitablerow/#onselect","characteristics":[]}]},{"title":"Methods","details":[{"id":655,"headline":"Instance method","shortName":"new UITableRow","longName":"new UITableRow()","decleration":"new UITableRow()","copyDecleration":"new UITableRow()","summary":"Constructs a row.","description":"Rows are shown vertically in a UITable. A row contains cells which are displayed horizontally.","url":"https://docs.scriptable.app/uitablerow/#-new-uitablerow"},{"id":660,"headline":"Instance method","shortName":"addButton","longName":"-addButton(title)","decleration":"addButton(title: string): UITableCell","copyDecleration":"addButton(title)","summary":"Adds a button cell.","description":"Constructs a new cell that contains a button. Set the <code>onTap</code> property to specify an action to performed when the button is tapped.","infoSections":[{"title":"Parameters","infos":[{"title":"title","subtitle":"string","copyDecleration":"title","description":"Title of the button."}]},{"title":"Return value","infos":[{"subtitle":"UITableCell","description":"Cosntructed cell."}]}],"url":"https://docs.scriptable.app/uitablerow/#-addbutton"},{"id":656,"headline":"Instance method","shortName":"addCell","longName":"-addCell(cell)","decleration":"addCell(cell: UITableCell)","copyDecleration":"addCell(cell)","summary":"Adds a cell.","description":"Adds a cell to the row. Note that cells are shown in the order they are added to the row.","infoSections":[{"title":"Parameters","infos":[{"title":"cell","subtitle":"UITableCell","copyDecleration":"cell","description":"Cell to add to the row."}]}],"url":"https://docs.scriptable.app/uitablerow/#-addcell"},{"id":658,"headline":"Instance method","shortName":"addImage","longName":"-addImage(image)","decleration":"addImage(image: Image): UITableCell","copyDecleration":"addImage(image)","summary":"Adds an image cell.","description":"Constructs a new cell containing the specified image and adds it to the row.","infoSections":[{"title":"Parameters","infos":[{"title":"image","subtitle":"Image","copyDecleration":"image","description":"Image to show in the cell."}]},{"title":"Return value","infos":[{"subtitle":"UITableCell","description":"Cosntructed cell."}]}],"url":"https://docs.scriptable.app/uitablerow/#-addimage"},{"id":659,"headline":"Instance method","shortName":"addImageAtURL","longName":"-addImageAtURL(url)","decleration":"addImageAtURL(url: string): UITableCell","copyDecleration":"addImageAtURL(url)","summary":"Adds an image cell.","description":"Constructs a new cell that loads the image at the specified url and adds the cell to the row.","infoSections":[{"title":"Parameters","infos":[{"title":"url","subtitle":"string","copyDecleration":"url","description":"URL to image."}]},{"title":"Return value","infos":[{"subtitle":"UITableCell","description":"Cosntructed cell."}]}],"url":"https://docs.scriptable.app/uitablerow/#-addimageaturl"},{"id":657,"headline":"Instance method","shortName":"addText","longName":"-addText(title, subtitle)","decleration":"addText(title: string, subtitle: string): UITableCell","copyDecleration":"addText(title, subtitle)","summary":"Adds a text cell.","description":"Constructs a new cell containing the specified string and adds it to the row.","infoSections":[{"title":"Parameters","infos":[{"title":"title","subtitle":"string","copyDecleration":"title","description":"Optional title to show in the cell."},{"title":"subtitle","subtitle":"string","copyDecleration":"subtitle","description":"Optional subtitle shown below the title in the cell."}]},{"title":"Return value","infos":[{"subtitle":"UITableCell","description":"Constructed cell."}]}],"url":"https://docs.scriptable.app/uitablerow/#-addtext"}]}],"summary":"Row in a UITable.","description":"Rows can be added to an instance of UITable. A row is shown vertically\nin a UITable in the order they are added to the table. Rows contain cells which are shown horizontally in the order they are added to the row.","url":"https://docs.scriptable.app/uitablerow","pageId":8},{"id":661,"headline":"Type","shortName":"URLScheme","longName":"URLScheme","detailsSections":[{"title":"Methods","details":[{"id":662,"headline":"Static method","shortName":"allParameters","longName":"+allParameters()","decleration":"static allParameters(): {string: string}","copyDecleration":"allParameters()","summary":"Gets all parameters from invocation of URL scheme.","description":"Gets all the query parameters that were passed in the URL when running this script by invoking its URL scheme.","deprecation":{"version":"1.3","message":"Use args.queryParameters instead."},"infoSections":[{"title":"Return value","infos":[{"subtitle":"{string: string}","description":"All query parameters."}]}],"url":"https://docs.scriptable.app/urlscheme/#allparameters"},{"id":664,"headline":"Static method","shortName":"forOpeningScript","longName":"+forOpeningScript()","decleration":"static forOpeningScript(): string","copyDecleration":"forOpeningScript()","summary":"URL for opening the script.","description":"Gets the URL for opening the current script. When making a request to the returned URL from another app, e.g. Safari, the script will be opened.","infoSections":[{"title":"Return value","infos":[{"subtitle":"string","description":"URL for opening script."}]}],"url":"https://docs.scriptable.app/urlscheme/#foropeningscript"},{"id":665,"headline":"Static method","shortName":"forOpeningScriptSettings","longName":"+forOpeningScriptSettings()","decleration":"static forOpeningScriptSettings(): string","copyDecleration":"forOpeningScriptSettings()","summary":"URL for opening script settings.","description":"Gets the URL for opening the settings of the current script. When making a request to the returned URL from another app, e.g. Safari, the settings of the current script will be opened.","infoSections":[{"title":"Return value","infos":[{"subtitle":"string","description":"URL for opening script settings."}]}],"url":"https://docs.scriptable.app/urlscheme/#foropeningscriptsettings"},{"id":666,"headline":"Static method","shortName":"forRunningScript","longName":"+forRunningScript()","decleration":"static forRunningScript(): string","copyDecleration":"forRunningScript()","summary":"URL for running script.","description":"Gets the URL for running the current script. When making a request to the returned URL from another app, e.g. Safari, the current script will run.\n\nGet the query parameters using the <code>args.queryParameters</code>.","infoSections":[{"title":"Return value","infos":[{"subtitle":"string","description":"URL for opening script settings."}]}],"url":"https://docs.scriptable.app/urlscheme/#forrunningscript"},{"id":663,"headline":"Static method","shortName":"parameter","longName":"+parameter(name)","decleration":"static parameter(name: string): string","copyDecleration":"parameter(name)","summary":"Gets a parameters from invocation of URL scheme.","description":"Gets the value of a query parameter that was passed in the URL when running this script by invoking its URL scheme.","deprecation":{"version":"1.3","message":"Use args.queryParameters instead."},"infoSections":[{"title":"Parameters","infos":[{"title":"name","subtitle":"string","copyDecleration":"name","description":"Name of the query parameter to get the value for."}]},{"title":"Return value","infos":[{"subtitle":"string","description":"Value of query parameter."}]}],"url":"https://docs.scriptable.app/urlscheme/#parameter"}]}],"summary":"Manages URL schemes for Scriptable.","description":"Use URL schemes to launch the app and perform an action, such as running a script.\nThe app conforms to the <code>scriptable://</code> URL scheme. The following actions can be performed using the URL scheme.\n\n<strong>Adding a script</strong>\nTo add a new script, you should use the following URL scheme:\n\n<code>scriptable:///add</code>\n\n<strong>Opening a script</strong>\nTo open an existing script, you should use the following URL scheme:\n\n<code>scriptable:///open/Example</code>\n\nThe <code>scriptName</code> query parameter is the name of the script to open. <code>scriptName</code> must be URL encoded. You may optionally add the query parameter <code>openSettings</code> with a value of <code>true</code> to automatically open the script settings.\n\n<strong>Running a script</strong>\nTo run an existing script, you should use the following URL scheme:\n\n<code>scriptable:///run/Example</code>\n\nThe <code>scriptName</code> query parameter is the name of the script to run. <code>scriptName</code> must be URL encoded.\n\nIf you set <code>openEditor</code> to true, the script will run with the editor shown opposed to running directly from the list of scripts. Opening the editor to run the script is beneficial in cases where you need to view messages logged to the console.\n\nIn addition to the <code>scriptable://</code> scheme, you can also perform the above actions using the universal link <code>open.scriptable.app</code>, e.g. <code>https://open.scriptable.app/run/Example</code>","url":"https://docs.scriptable.app/urlscheme","pageId":8},{"id":667,"headline":"Type","shortName":"UUID","longName":"UUID","detailsSections":[{"title":"Methods","details":[{"id":668,"headline":"Static method","shortName":"string","longName":"+string()","decleration":"static string(): string","copyDecleration":"string()","summary":"Get string value.","description":"Used for getting the string value of a UUID.","infoSections":[{"title":"Return value","infos":[{"subtitle":"string","description":"String value."}]}],"url":"https://docs.scriptable.app/uuid/#string"}]}],"summary":"Unique identifier.","description":"A universally unique value that can be used to identify items.","url":"https://docs.scriptable.app/uuid","pageId":8},{"id":669,"headline":"Type","shortName":"WebView","longName":"WebView","detailsSections":[{"title":"Properties","details":[{"id":670,"headline":"Instance property","shortName":"shouldAllowRequest","longName":"shouldAllowRequest","subtitle":"fn(Request) -> bool","decleration":"shouldAllowRequest: fn(Request) -> bool","copyDecleration":"shouldAllowRequest","summary":"Function called upon load of a request.","description":"When the web view performs a request to load a resource, the function can determine whether or not to allow the request. Disallowing request can speed up the time it takes to load the website.\n\nBy default all requests are allowed.","url":"https://docs.scriptable.app/webview/#shouldallowrequest","characteristics":[]}]},{"title":"Methods","details":[{"id":671,"headline":"Instance method","shortName":"new WebView","longName":"new WebView()","decleration":"new WebView()","copyDecleration":"new WebView()","summary":"Constructs web view.","description":"Constructs a new web view. Use a web view to evaluate JavaScript on websites.","url":"https://docs.scriptable.app/webview/#-new-webview"},{"id":679,"headline":"Instance method","shortName":"evaluateJavaScript","longName":"-evaluateJavaScript(javaScript, useCallback)","decleration":"evaluateJavaScript(javaScript: string, useCallback: bool): Promise<any>","copyDecleration":"evaluateJavaScript(javaScript, useCallback)","summary":"Evaluates JavaScript in the web view.","description":"Evaluates JavaScript in the current context of the web view. The returned promise carries the result of evaluating the JavaScript.\n\nWhen passing <code>false</code> to the <code>useCallback</code> parameter, which is the default value, evaluation will terminate after evaluating the last line of the JavaScript. The value on the last line of the script will be carried by the promise returned by <code>evaluateJavaScript</code>.\n\nWhen passing <code>true</code> to the <code>useCallback</code> parameter, evaluation will only complete after the globally available <code>completion</code> function is called. Any value passed to the function, will be carried by the promise returned by <code>evaluateJavaScript</code>.\n\nThe log is available from the evaluated JavaScript, i.e. messages passed to the globally available <code>log</code> and <code>logError</code> functions will be shown in the log.","infoSections":[{"title":"Parameters","infos":[{"title":"javaScript","subtitle":"string","copyDecleration":"javaScript","description":"JavaScript to evaluate in the web view."},{"title":"useCallback","subtitle":"bool","copyDecleration":"useCallback","description":"Optional. If true the web view waits for the globally available completion function of the web view to be called before terminating. Defaults to false."}]},{"title":"Return value","infos":[{"subtitle":"Promise<any>","description":"Promise that carries the result of evaluating the JavaScript."}]}],"url":"https://docs.scriptable.app/webview/#-evaluatejavascript"},{"id":680,"headline":"Instance method","shortName":"getHTML","longName":"-getHTML()","decleration":"getHTML(): Promise<any>","copyDecleration":"getHTML()","summary":"Reads and returns HTML from the loaded website.","infoSections":[{"title":"Return value","infos":[{"subtitle":"Promise<any>","description":"Promise that carries the HTML of the loaded website."}]}],"url":"https://docs.scriptable.app/webview/#-gethtml"},{"id":673,"headline":"Static method","shortName":"loadFile","longName":"+loadFile(fileURL, preferredSize, fullscreen)","decleration":"static loadFile(fileURL: string, preferredSize: Size, fullscreen: bool): Promise","copyDecleration":"loadFile(fileURL, preferredSize, fullscreen)","summary":"Loads a file and renders it.","description":"Files can be of various types, including HTML files and images.\n\nThe supplied HTML file can reference files and nested directories in the same directory as the HTML file resides.\n\nThe optional <code>preferredSize</code> parameter is ignored unless the script is run in a Siri Shortcut.\n\nIf you are displaying large images in a memory constrained envrionment, for example in a Siri Shortcut, you should use the WebView bridge instead of the QuickLook bridge. The technical reason for this is that a Siri Shortcut and other app extension processes have very limited memory and loading a very large image will cause the app extension to be terminated. However, the web view will run in a different process meaning that it is not affected by the same memory constraints.","infoSections":[{"title":"Parameters","infos":[{"title":"fileURL","subtitle":"string","copyDecleration":"fileURL","description":"URL of the file to load and render."},{"title":"preferredSize","subtitle":"Size","copyDecleration":"preferredSize","description":"Optional. Preferred size of the view. This size is not guaranteed to be respected and is only used when the script is run with Siri or in the Shortcuts app."},{"title":"fullscreen","subtitle":"bool","copyDecleration":"fullscreen","description":"Optional. Set to true to present the web view in fullscreen. This only has an effect when used within the app. Defaults to false."}]},{"title":"Return value","infos":[{"subtitle":"Promise","description":"Promise that carries no value. Once the web view have been closed, the promise will complete."}]}],"url":"https://docs.scriptable.app/webview/#loadfile"},{"id":678,"headline":"Instance method","shortName":"loadFile","longName":"-loadFile(fileURL)","decleration":"loadFile(fileURL: string): Promise","copyDecleration":"loadFile(fileURL)","summary":"Loads file in the web view.","description":"Files can be of various types, including HTML files and images.\n\nThe supplied HTML file can reference files and nested directories in the same directory as the HTML file resides.","infoSections":[{"title":"Parameters","infos":[{"title":"fileURL","subtitle":"string","copyDecleration":"fileURL","description":"URL of the file to load and render."}]},{"title":"Return value","infos":[{"subtitle":"Promise","description":"Promise that carries no value. Once the web view has finished loading, the promise will complete."}]}],"url":"https://docs.scriptable.app/webview/#-loadfile"},{"id":672,"headline":"Static method","shortName":"loadHTML","longName":"+loadHTML(html, baseURL, preferredSize, fullscreen)","decleration":"static loadHTML(html: string, baseURL: string, preferredSize: Size, fullscreen: bool): Promise","copyDecleration":"loadHTML(html, baseURL, preferredSize, fullscreen)","summary":"Loads HTML and renders it.","infoSections":[{"title":"Parameters","infos":[{"title":"html","subtitle":"string","copyDecleration":"html","description":"HTML to load and render."},{"title":"baseURL","subtitle":"string","copyDecleration":"baseURL","description":"Optional. Base URL used to resolve relative URLs in the HTML."},{"title":"preferredSize","subtitle":"Size","copyDecleration":"preferredSize","description":"Optional. Preferred size of the view. This size is not guaranteed to be respected and is only used when the script is run with Siri or in the Shortcuts app."},{"title":"fullscreen","subtitle":"bool","copyDecleration":"fullscreen","description":"Optional. Set to true to present the web view in fullscreen. This only has an effect when used within the app. Defaults to false."}]},{"title":"Return value","infos":[{"subtitle":"Promise","description":"Promise that carries no value. Once the web view have been closed, the promise will complete."}]}],"url":"https://docs.scriptable.app/webview/#loadhtml"},{"id":677,"headline":"Instance method","shortName":"loadHTML","longName":"-loadHTML(html, baseURL)","decleration":"loadHTML(html: string, baseURL: string): Promise","copyDecleration":"loadHTML(html, baseURL)","summary":"Loads HTML in web view.","description":"Loads the HTML into  the web view. The returned promise will complete once the web view has finished loading.","infoSections":[{"title":"Parameters","infos":[{"title":"html","subtitle":"string","copyDecleration":"html","description":"HTML to load into the web view."},{"title":"baseURL","subtitle":"string","copyDecleration":"baseURL","description":"Optional. Base URL used to resolve relative URLs in the HTML."}]},{"title":"Return value","infos":[{"subtitle":"Promise","description":"Promise that carries no value. Once the web view has finished loading, the promise will complete."}]}],"url":"https://docs.scriptable.app/webview/#-loadhtml"},{"id":676,"headline":"Instance method","shortName":"loadRequest","longName":"-loadRequest(request)","decleration":"loadRequest(request: Request): Promise","copyDecleration":"loadRequest(request)","summary":"Loads request in web view.","description":"When loading a request into the web view, the HTTP method, body and headers of the request will be respected. The onRedirect function on the request will not be invoked.","infoSections":[{"title":"Parameters","infos":[{"title":"request","subtitle":"Request","copyDecleration":"request","description":"Request to load into the web view."}]},{"title":"Return value","infos":[{"subtitle":"Promise","description":"Promise that carries no value. Once the web view has finished loading, the promise will complete."}]}],"url":"https://docs.scriptable.app/webview/#-loadrequest"},{"id":674,"headline":"Static method","shortName":"loadURL","longName":"+loadURL(url, preferredSize, fullscreen)","decleration":"static loadURL(url: string, preferredSize: Size, fullscreen: bool): Promise","copyDecleration":"loadURL(url, preferredSize, fullscreen)","summary":"Loads URL in web view and presents the web view.","description":"The optional <code>preferredSize</code> parameter is ignored unless the script is run in a Siri Shortcut.","infoSections":[{"title":"Parameters","infos":[{"title":"url","subtitle":"string","copyDecleration":"url","description":"URL to load into the web view."},{"title":"preferredSize","subtitle":"Size","copyDecleration":"preferredSize","description":"Optional. Preferred size of the view. This size is not guaranteed to be respected and is only used when the script is run with Siri or in the Shortcuts app."},{"title":"fullscreen","subtitle":"bool","copyDecleration":"fullscreen","description":"Optional. Set to true to present the web view in fullscreen. This only has an effect when used within the app. Defaults to false."}]},{"title":"Return value","infos":[{"subtitle":"Promise","description":"Promise that carries no value. Once the web view have been closed, the promise will complete."}]}],"url":"https://docs.scriptable.app/webview/#loadurl"},{"id":675,"headline":"Instance method","shortName":"loadURL","longName":"-loadURL(url)","decleration":"loadURL(url: string): Promise","copyDecleration":"loadURL(url)","summary":"Loads URL in web view.","description":"Loads the URL in the web view. The returned promise will complete once the web view has finished loading.","infoSections":[{"title":"Parameters","infos":[{"title":"url","subtitle":"string","copyDecleration":"url","description":"URL to load into the web view."}]},{"title":"Return value","infos":[{"subtitle":"Promise","description":"Promise that carries no value. Once the web view has finished loading, the promise will complete."}]}],"url":"https://docs.scriptable.app/webview/#-loadurl"},{"id":681,"headline":"Instance method","shortName":"present","longName":"-present(fullscreen)","decleration":"present(fullscreen: bool): Promise","copyDecleration":"present(fullscreen)","summary":"Presents the web view.","description":"The web view is presented with the content that has been loaded into it.","infoSections":[{"title":"Parameters","infos":[{"title":"fullscreen","subtitle":"bool","copyDecleration":"fullscreen","description":"Set to true to present the web view in fullscreen. Defaults to false."}]},{"title":"Return value","infos":[{"subtitle":"Promise","description":"Promise that is fulfilled when the presented web view is dismissed. The promise carries no value."}]}],"url":"https://docs.scriptable.app/webview/#-present"},{"id":682,"headline":"Instance method","shortName":"waitForLoad","longName":"-waitForLoad()","decleration":"waitForLoad(): Promise<any>","copyDecleration":"waitForLoad()","summary":"Waits for the web view to load.","description":"The returned promise will be fulfilled when the web view finishes loading. If the load fails, the promise will be fulfilled with an error.\nUse this with caution. If the web view is not loading a new page or is not about to load a new page, the returned promise will never be fulfilled. This limitation exists because Scriptable cannot determine if a web view is about to load a page in cases where evaluating JavaScript in the web view causes a new page to load.\n\nGenerally this should only be used when loading causing a new page to load from <code>evaluateJavaScript</code>. In other cases, e.g. when loading a URL using <code>loadURL</code>,\nthe returned promise will be fulfilled when the page have been loaded.","infoSections":[{"title":"Return value","infos":[{"subtitle":"Promise<any>","description":"Promise that is fulfilled when the web view has finished the active load."}]}],"url":"https://docs.scriptable.app/webview/#-waitforload"}]}],"summary":"Presents websites and evaluates JavaScript on websites.","description":"Supports rendering HTML as well as loading a file and rendering it. A file can be of various types. It could for example be an HTML file or an image.\n\nThe web view also supports evaluating JavaScript on a website.","url":"https://docs.scriptable.app/webview","pageId":8},{"id":683,"headline":"Type","shortName":"WidgetDate","longName":"WidgetDate","detailsSections":[{"title":"Properties","details":[{"id":684,"headline":"Instance property","shortName":"date","longName":"date","subtitle":"Date","decleration":"date: Date","copyDecleration":"date","summary":"Date to show in a widget.","url":"https://docs.scriptable.app/widgetdate/#date","characteristics":[]},{"id":686,"headline":"Instance property","shortName":"font","longName":"font","subtitle":"Font","decleration":"font: Font","copyDecleration":"font","summary":"Font and text size of the text.","url":"https://docs.scriptable.app/widgetdate/#font","characteristics":[]},{"id":688,"headline":"Instance property","shortName":"lineLimit","longName":"lineLimit","subtitle":"number","decleration":"lineLimit: number","copyDecleration":"lineLimit","summary":"Maximum number of lines.","description":"Maximum number of lines to display. The limit is disabled when the value is 0 or less. Defaults to 0.","url":"https://docs.scriptable.app/widgetdate/#linelimit","characteristics":[]},{"id":689,"headline":"Instance property","shortName":"minimumScaleFactor","longName":"minimumScaleFactor","subtitle":"number","decleration":"minimumScaleFactor: number","copyDecleration":"minimumScaleFactor","summary":"Minimum amount the text scales down to.","description":"Sets the minimum amount that text scales down to fit in the available space. For example, a text with a minimum scale factor of 0.5 allows the widget to draw the text in a font size half the size of the actual font. The scale factor should be a fraction between 0 and 1, both inclusive. Defaults to 1.","url":"https://docs.scriptable.app/widgetdate/#minimumscalefactor","characteristics":[]},{"id":690,"headline":"Instance property","shortName":"shadowColor","longName":"shadowColor","subtitle":"Color","decleration":"shadowColor: Color","copyDecleration":"shadowColor","summary":"Color of the shadow.","description":"Sets the color of the shadow cast by the text. The <code>shadowRadius</code> property must have a value greater than zero for this property to have an effect. Defaults to black.","url":"https://docs.scriptable.app/widgetdate/#shadowcolor","characteristics":[]},{"id":692,"headline":"Instance property","shortName":"shadowOffset","longName":"shadowOffset","subtitle":"Point","decleration":"shadowOffset: Point","copyDecleration":"shadowOffset","summary":"Offset of the shadow.","description":"Sets the offset of the shadow cast by the text. The <code>shadowRadius</code> property must have a value greater than zero for this property to have an effect. Defaults to (0, 0).","url":"https://docs.scriptable.app/widgetdate/#shadowoffset","characteristics":[]},{"id":691,"headline":"Instance property","shortName":"shadowRadius","longName":"shadowRadius","subtitle":"number","decleration":"shadowRadius: number","copyDecleration":"shadowRadius","summary":"Size of the shadow.","description":"Sets the size of the shadow cast by the text. Defaults to 0.","url":"https://docs.scriptable.app/widgetdate/#shadowradius","characteristics":[]},{"id":685,"headline":"Instance property","shortName":"textColor","longName":"textColor","subtitle":"Color","decleration":"textColor: Color","copyDecleration":"textColor","summary":"Color of the text.","url":"https://docs.scriptable.app/widgetdate/#textcolor","characteristics":[]},{"id":687,"headline":"Instance property","shortName":"textOpacity","longName":"textOpacity","subtitle":"number","decleration":"textOpacity: number","copyDecleration":"textOpacity","summary":"Opacity of the text.","description":"Opacity of the text. This must be a value between 0 and 1. Defaults to 1.","url":"https://docs.scriptable.app/widgetdate/#textopacity","characteristics":[]},{"id":693,"headline":"Instance property","shortName":"url","longName":"url","subtitle":"string","decleration":"url: string","copyDecleration":"url","summary":"URL to open.","description":"The URL will be opened when the text is tapped. This is only supported in medium and large widgets. Small widgets can only have a single tap target, which is specified by the <code>url</code> on the widget.","url":"https://docs.scriptable.app/widgetdate/#url","characteristics":[]}]},{"title":"Methods","details":[{"id":698,"headline":"Instance method","shortName":"applyDateStyle","longName":"-applyDateStyle()","decleration":"applyDateStyle()","copyDecleration":"applyDateStyle()","summary":"Display entire date.","description":"Example output:\n    June 3, 2019\n\nThis is the default.","url":"https://docs.scriptable.app/widgetdate/#-applydatestyle"},{"id":700,"headline":"Instance method","shortName":"applyOffsetStyle","longName":"-applyOffsetStyle()","decleration":"applyOffsetStyle()","copyDecleration":"applyOffsetStyle()","summary":"Display date as offset from now.","description":"Example output:\n    +2 hours\n    -3 months","url":"https://docs.scriptable.app/widgetdate/#-applyoffsetstyle"},{"id":699,"headline":"Instance method","shortName":"applyRelativeStyle","longName":"-applyRelativeStyle()","decleration":"applyRelativeStyle()","copyDecleration":"applyRelativeStyle()","summary":"Display date as relative to now.","description":"Example output:\n    2 hours, 23 minutes\n    1 year, 1 month","url":"https://docs.scriptable.app/widgetdate/#-applyrelativestyle"},{"id":701,"headline":"Instance method","shortName":"applyTimerStyle","longName":"-applyTimerStyle()","decleration":"applyTimerStyle()","copyDecleration":"applyTimerStyle()","summary":"Display date as timer counting from now.","description":"Example output:\n   2:32\n   36:59:01","url":"https://docs.scriptable.app/widgetdate/#-applytimerstyle"},{"id":697,"headline":"Instance method","shortName":"applyTimeStyle","longName":"-applyTimeStyle()","decleration":"applyTimeStyle()","copyDecleration":"applyTimeStyle()","summary":"Display time component of the date.","description":"Example output:\n    11:23PM","url":"https://docs.scriptable.app/widgetdate/#-applytimestyle"},{"id":695,"headline":"Instance method","shortName":"centerAlignText","longName":"-centerAlignText()","decleration":"centerAlignText()","copyDecleration":"centerAlignText()","summary":"Center aligns the text.","description":"Specifies that text should be center aligned.\n\nThis does not affect texts placed in stacks. Use spacers instead when aligning text in stacks. To align the text in the center of a horizontal stack, you should place a spacer both before and after the text.","url":"https://docs.scriptable.app/widgetdate/#-centeraligntext"},{"id":694,"headline":"Instance method","shortName":"leftAlignText","longName":"-leftAlignText()","decleration":"leftAlignText()","copyDecleration":"leftAlignText()","summary":"Left aligns the text.","description":"Specifies that text should be left aligned. This is the default.\n\nThis does not affect texts placed in stacks. Use spacers instead when aligning text in stacks. To align the text to left right in a horizontal stack, you should place a spacer after the text.","url":"https://docs.scriptable.app/widgetdate/#-leftaligntext"},{"id":696,"headline":"Instance method","shortName":"rightAlignText","longName":"-rightAlignText()","decleration":"rightAlignText()","copyDecleration":"rightAlignText()","summary":"Right aligns the text.","description":"Specifies that text should be right aligned.\n\nThis does not affect texts placed in stacks. Use spacers instead when aligning text in stacks. To align the text to the right in a horizontal stack, you should place a spacer before the text.","url":"https://docs.scriptable.app/widgetdate/#-rightaligntext"}]}],"summary":"Date element shown in a widget.","description":"A date shown in a widget. Dates will update periodically when shown in a widget.\n\nYou do not create instances of this element directly. Instead you should call <code>addDate()</code> on an instance of a <code>ListWidget</code>.","url":"https://docs.scriptable.app/widgetdate","pageId":8},{"id":702,"headline":"Type","shortName":"WidgetImage","longName":"WidgetImage","detailsSections":[{"title":"Properties","details":[{"id":709,"headline":"Instance property","shortName":"borderColor","longName":"borderColor","subtitle":"Color","decleration":"borderColor: Color","copyDecleration":"borderColor","summary":"Border color.","description":"Color of the border around the image. Defaults to black.","url":"https://docs.scriptable.app/widgetimage/#bordercolor","characteristics":[]},{"id":708,"headline":"Instance property","shortName":"borderWidth","longName":"borderWidth","subtitle":"number","decleration":"borderWidth: number","copyDecleration":"borderWidth","summary":"Border width.","description":"Width of the border around the image. Defaults to 0.","url":"https://docs.scriptable.app/widgetimage/#borderwidth","characteristics":[]},{"id":710,"headline":"Instance property","shortName":"containerRelativeShape","longName":"containerRelativeShape","subtitle":"bool","decleration":"containerRelativeShape: bool","copyDecleration":"containerRelativeShape","summary":"Shape the image relative to its container.","description":"When true the corners of the image will be rounded relative to the containing widget. The value of <code>cornerRadius</code> is ignored when this is true. Defaults to false.","url":"https://docs.scriptable.app/widgetimage/#containerrelativeshape","characteristics":[]},{"id":707,"headline":"Instance property","shortName":"cornerRadius","longName":"cornerRadius","subtitle":"number","decleration":"cornerRadius: number","copyDecleration":"cornerRadius","summary":"Radius of the corners.","description":"Radius of the rounded corners. This property is ignored when <code>containerRelativeShape</code> is set to true. Defaults to 0.","url":"https://docs.scriptable.app/widgetimage/#cornerradius","characteristics":[]},{"id":703,"headline":"Instance property","shortName":"image","longName":"image","subtitle":"Image","decleration":"image: Image","copyDecleration":"image","summary":"Image to show in widget.","url":"https://docs.scriptable.app/widgetimage/#image","characteristics":[]},{"id":706,"headline":"Instance property","shortName":"imageOpacity","longName":"imageOpacity","subtitle":"number","decleration":"imageOpacity: number","copyDecleration":"imageOpacity","summary":"Opacity when shown in widget.","description":"Opacity of the image. This must be a value between 0 and 1. Defaults to 1.","url":"https://docs.scriptable.app/widgetimage/#imageopacity","characteristics":[]},{"id":705,"headline":"Instance property","shortName":"imageSize","longName":"imageSize","subtitle":"Size","decleration":"imageSize: Size","copyDecleration":"imageSize","summary":"Size of the image in the widget.","description":"Size of the image. When set to null, the image will be shwon at its full size. Defaults to null.","url":"https://docs.scriptable.app/widgetimage/#imagesize","characteristics":[]},{"id":704,"headline":"Instance property","shortName":"resizable","longName":"resizable","subtitle":"bool","decleration":"resizable: bool","copyDecleration":"resizable","summary":"Whether the image is resizable.","description":"When set to true, the image can be resized. Defaults to true.","url":"https://docs.scriptable.app/widgetimage/#resizable","characteristics":[]},{"id":711,"headline":"Instance property","shortName":"tintColor","longName":"tintColor","subtitle":"Color","decleration":"tintColor: Color","copyDecleration":"tintColor","summary":"Tint color of the image.","description":"Changes the color of the image. Set to <code>null</code> to show the original image. Defaults to <code>null</code>.","url":"https://docs.scriptable.app/widgetimage/#tintcolor","characteristics":[]},{"id":712,"headline":"Instance property","shortName":"url","longName":"url","subtitle":"string","decleration":"url: string","copyDecleration":"url","summary":"URL to open.","description":"The URL will be opened when the text is tapped. This is only supported in medium and large widgets. Small widgets can only have a single tap target, which is specified by the <code>url</code> on the widget.","url":"https://docs.scriptable.app/widgetimage/#url","characteristics":[]}]},{"title":"Methods","details":[{"id":717,"headline":"Instance method","shortName":"applyFillingContentMode","longName":"-applyFillingContentMode()","decleration":"applyFillingContentMode()","copyDecleration":"applyFillingContentMode()","summary":"Uses filling content mode.","description":"The image will fill the available space.","url":"https://docs.scriptable.app/widgetimage/#-applyfillingcontentmode"},{"id":716,"headline":"Instance method","shortName":"applyFittingContentMode","longName":"-applyFittingContentMode()","decleration":"applyFittingContentMode()","copyDecleration":"applyFittingContentMode()","summary":"Uses fitting content mode.","description":"The image will fit the available space. This content mode is the default.","url":"https://docs.scriptable.app/widgetimage/#-applyfittingcontentmode"},{"id":714,"headline":"Instance method","shortName":"centerAlignImage","longName":"-centerAlignImage()","decleration":"centerAlignImage()","copyDecleration":"centerAlignImage()","summary":"Center aligns the image.","description":"Specifies that image should be center aligned.","url":"https://docs.scriptable.app/widgetimage/#-centeralignimage"},{"id":713,"headline":"Instance method","shortName":"leftAlignImage","longName":"-leftAlignImage()","decleration":"leftAlignImage()","copyDecleration":"leftAlignImage()","summary":"Left aligns the image.","description":"Specifies that image should be left aligned. This is the default.","url":"https://docs.scriptable.app/widgetimage/#-leftalignimage"},{"id":715,"headline":"Instance method","shortName":"rightAlignImage","longName":"-rightAlignImage()","decleration":"rightAlignImage()","copyDecleration":"rightAlignImage()","summary":"Right aligns the image.","description":"Specifies that image should be right aligned.","url":"https://docs.scriptable.app/widgetimage/#-rightalignimage"}]}],"summary":"Image element shown in widget.","description":"An image shown in a widget. You do not create instances of this element directly. Instead you should call <code>addImage()</code> on an instance of a <code>ListWidget</code>.","url":"https://docs.scriptable.app/widgetimage","pageId":8},{"id":718,"headline":"Type","shortName":"WidgetSpacer","longName":"WidgetSpacer","detailsSections":[{"title":"Properties","details":[{"id":719,"headline":"Instance property","shortName":"length","longName":"length","subtitle":"number","decleration":"length: number","copyDecleration":"length","summary":"Text to show in widget.","url":"https://docs.scriptable.app/widgetspacer/#length","characteristics":[]}]}],"summary":"Spacer element shown in widget.","description":"Shows a spacer in the widget. A spacer with a null length has a flexible length.","url":"https://docs.scriptable.app/widgetspacer","pageId":8},{"id":720,"headline":"Type","shortName":"WidgetStack","longName":"WidgetStack","detailsSections":[{"title":"Properties","details":[{"id":721,"headline":"Instance property","shortName":"backgroundColor","longName":"backgroundColor","subtitle":"Color","decleration":"backgroundColor: Color","copyDecleration":"backgroundColor","summary":"Background color of the widget.","url":"https://docs.scriptable.app/widgetstack/#backgroundcolor","characteristics":[]},{"id":723,"headline":"Instance property","shortName":"backgroundGradient","longName":"backgroundGradient","subtitle":"LinearGradient","decleration":"backgroundGradient: LinearGradient","copyDecleration":"backgroundGradient","summary":"Background gradient.","url":"https://docs.scriptable.app/widgetstack/#backgroundgradient","characteristics":[]},{"id":722,"headline":"Instance property","shortName":"backgroundImage","longName":"backgroundImage","subtitle":"Image","decleration":"backgroundImage: Image","copyDecleration":"backgroundImage","summary":"Background image.","url":"https://docs.scriptable.app/widgetstack/#backgroundimage","characteristics":[]},{"id":728,"headline":"Instance property","shortName":"borderColor","longName":"borderColor","subtitle":"Color","decleration":"borderColor: Color","copyDecleration":"borderColor","summary":"Border color.","description":"Color of the border around the stack. Defaults to black.","url":"https://docs.scriptable.app/widgetstack/#bordercolor","characteristics":[]},{"id":727,"headline":"Instance property","shortName":"borderWidth","longName":"borderWidth","subtitle":"number","decleration":"borderWidth: number","copyDecleration":"borderWidth","summary":"Border width.","description":"Width of the border around the stack. Defaults to 0.","url":"https://docs.scriptable.app/widgetstack/#borderwidth","characteristics":[]},{"id":726,"headline":"Instance property","shortName":"cornerRadius","longName":"cornerRadius","subtitle":"number","decleration":"cornerRadius: number","copyDecleration":"cornerRadius","summary":"Radius of the corners.","description":"Radius of the rounded corners. Defaults to 0.","url":"https://docs.scriptable.app/widgetstack/#cornerradius","characteristics":[]},{"id":725,"headline":"Instance property","shortName":"size","longName":"size","subtitle":"Size","decleration":"size: Size","copyDecleration":"size","summary":"Size of the stack.","description":"Specifies the size of the stack when shown in a widget. When a dimension is set to zero or less, the widget will automatically decide a length for that dimension. Both dimensions default to 0.","url":"https://docs.scriptable.app/widgetstack/#size","characteristics":[]},{"id":724,"headline":"Instance property","shortName":"spacing","longName":"spacing","subtitle":"number","decleration":"spacing: number","copyDecleration":"spacing","summary":"Spacing between elements.","description":"Specifies the spacing between elements in the stack. You can also use the <code>addSpacer()</code> function on the widget to add spacing between elements. Defaults to 0.","url":"https://docs.scriptable.app/widgetstack/#spacing","characteristics":[]},{"id":729,"headline":"Instance property","shortName":"url","longName":"url","subtitle":"string","decleration":"url: string","copyDecleration":"url","summary":"URL to open.","description":"The URL will be opened when the text is tapped. This is only supported in medium and large widgets. Small widgets can only have a single tap target, which is specified by the <code>url</code> on the widget.","url":"https://docs.scriptable.app/widgetstack/#url","characteristics":[]}]},{"title":"Methods","details":[{"id":731,"headline":"Instance method","shortName":"addDate","longName":"-addDate(date)","decleration":"addDate(date: Date): WidgetDate","copyDecleration":"addDate(date)","summary":"Add date to the widget.","description":"Adds a date element to the widget. Use the properties on the returned element to style the date.","infoSections":[{"title":"Parameters","infos":[{"title":"date","subtitle":"Date","copyDecleration":"date"}]},{"title":"Return value","infos":[{"subtitle":"WidgetDate","description":"Date element."}]}],"url":"https://docs.scriptable.app/widgetstack/#-adddate"},{"id":732,"headline":"Instance method","shortName":"addImage","longName":"-addImage(image)","decleration":"addImage(image: Image): WidgetImage","copyDecleration":"addImage(image)","summary":"Add image to the stack.","description":"Adds an image element to the stack. Use the properties on the returned element to style the image.","infoSections":[{"title":"Parameters","infos":[{"title":"image","subtitle":"Image","copyDecleration":"image"}]},{"title":"Return value","infos":[{"subtitle":"WidgetImage","description":"Image element."}]}],"url":"https://docs.scriptable.app/widgetstack/#-addimage"},{"id":733,"headline":"Instance method","shortName":"addSpacer","longName":"-addSpacer(length)","decleration":"addSpacer(length: number): WidgetSpacer","copyDecleration":"addSpacer(length)","summary":"Add spacer.","description":"Adds a spacer to the stack. This can be used to offset the content horizontally in the stack.","infoSections":[{"title":"Parameters","infos":[{"title":"length","subtitle":"number","copyDecleration":"length","description":"Length of the spacer. Pass null to create a spacer with a flexible length."}]},{"title":"Return value","infos":[{"subtitle":"WidgetSpacer","description":"Spacer element."}]}],"url":"https://docs.scriptable.app/widgetstack/#-addspacer"},{"id":734,"headline":"Instance method","shortName":"addStack","longName":"-addStack()","decleration":"addStack(): WidgetStack","copyDecleration":"addStack()","summary":"Add stack.","description":"Adds a stack to the widget. Stacks layout elements horizontally by default.","infoSections":[{"title":"Return value","infos":[{"subtitle":"WidgetStack","description":"Stack element."}]}],"url":"https://docs.scriptable.app/widgetstack/#-addstack"},{"id":730,"headline":"Instance method","shortName":"addText","longName":"-addText(text)","decleration":"addText(text: string): WidgetText","copyDecleration":"addText(text)","summary":"Add text to the stack.","description":"Adds a text element to the stack. Use the properties on the returned element to style the text.","infoSections":[{"title":"Parameters","infos":[{"title":"text","subtitle":"string","copyDecleration":"text"}]},{"title":"Return value","infos":[{"subtitle":"WidgetText","description":"Text element."}]}],"url":"https://docs.scriptable.app/widgetstack/#-addtext"},{"id":739,"headline":"Instance method","shortName":"bottomAlignContent","longName":"-bottomAlignContent()","decleration":"bottomAlignContent()","copyDecleration":"bottomAlignContent()","summary":"Bottom aligns the content.","description":"Specifies that content should be bottom aligned.","url":"https://docs.scriptable.app/widgetstack/#-bottomaligncontent"},{"id":738,"headline":"Instance method","shortName":"centerAlignContent","longName":"-centerAlignContent()","decleration":"centerAlignContent()","copyDecleration":"centerAlignContent()","summary":"Center aligns the content.","description":"Specifies that content should be center aligned.","url":"https://docs.scriptable.app/widgetstack/#-centeraligncontent"},{"id":740,"headline":"Instance method","shortName":"layoutHorizontally","longName":"-layoutHorizontally()","decleration":"layoutHorizontally()","copyDecleration":"layoutHorizontally()","summary":"Layout elements horizontally.","description":"Specifies that the stack should layout elements horizontally. This is the default.","url":"https://docs.scriptable.app/widgetstack/#-layouthorizontally"},{"id":741,"headline":"Instance method","shortName":"layoutVertically","longName":"-layoutVertically()","decleration":"layoutVertically()","copyDecleration":"layoutVertically()","summary":"Layout elements vertically.","description":"Specifies that the stack should layout elements vertically.","url":"https://docs.scriptable.app/widgetstack/#-layoutvertically"},{"id":735,"headline":"Instance method","shortName":"setPadding","longName":"-setPadding(top, leading, bottom, trailing)","decleration":"setPadding(top: number, leading: number, bottom: number, trailing: number)","copyDecleration":"setPadding(top, leading, bottom, trailing)","summary":"Set padding.","description":"Sets the padding on each side of the stack.","infoSections":[{"title":"Parameters","infos":[{"title":"top","subtitle":"number","copyDecleration":"top","description":"Padding on the top edge."},{"title":"leading","subtitle":"number","copyDecleration":"leading","description":"Padding on the leading edge."},{"title":"bottom","subtitle":"number","copyDecleration":"bottom","description":"Padding on the bottom edge."},{"title":"trailing","subtitle":"number","copyDecleration":"trailing","description":"Padding on the trailing edge."}]}],"url":"https://docs.scriptable.app/widgetstack/#-setpadding"},{"id":737,"headline":"Instance method","shortName":"topAlignContent","longName":"-topAlignContent()","decleration":"topAlignContent()","copyDecleration":"topAlignContent()","summary":"Top aligns the content.","description":"Specifies that content should be top aligned. This is the default.","url":"https://docs.scriptable.app/widgetstack/#-topaligncontent"},{"id":736,"headline":"Instance method","shortName":"useDefaultPadding","longName":"-useDefaultPadding()","decleration":"useDefaultPadding()","copyDecleration":"useDefaultPadding()","summary":"Use the default padding.","description":"Configure the stack to use the default padding. Any padding previously defined with <code>setPadding()</code> will be discarded.","url":"https://docs.scriptable.app/widgetstack/#-usedefaultpadding"}]}],"summary":"Stack element shown in widget.","description":"Shows a stack in the widget.","url":"https://docs.scriptable.app/widgetstack","pageId":8}]}