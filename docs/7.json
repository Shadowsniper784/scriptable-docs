{"pageId":7,"details":[{"id":525,"headline":"Type","shortName":"Reminder","longName":"Reminder","detailsSections":[{"title":"Properties","details":[{"id":536,"headline":"Instance property","shortName":"calendar","longName":"calendar","subtitle":"Calendar","decleration":"calendar: Calendar","copyDecleration":"calendar","summary":"Calendar the reminder is stored in.","url":"https://docs.scriptable.app/reminder/#calendar","characteristics":[]},{"id":534,"headline":"Instance property","shortName":"completionDate","longName":"completionDate","subtitle":"Date","decleration":"completionDate: Date","copyDecleration":"completionDate","summary":"Completion date of reminder.","url":"https://docs.scriptable.app/reminder/#completiondate","characteristics":["readOnly"]},{"id":535,"headline":"Instance property","shortName":"creationDate","longName":"creationDate","subtitle":"Date","decleration":"creationDate: Date","copyDecleration":"creationDate","summary":"Creation date of reminder.","url":"https://docs.scriptable.app/reminder/#creationdate","characteristics":["readOnly"]},{"id":532,"headline":"Instance property","shortName":"dueDate","longName":"dueDate","subtitle":"Date","decleration":"dueDate: Date","copyDecleration":"dueDate","summary":"Due date of reminder.","url":"https://docs.scriptable.app/reminder/#duedate","characteristics":[]},{"id":533,"headline":"Instance property","shortName":"dueDateIncludesTime","longName":"dueDateIncludesTime","subtitle":"bool","decleration":"dueDateIncludesTime: bool","copyDecleration":"dueDateIncludesTime","summary":"Whether the due date includes a time.","description":"When this is true, assignments to the <code>dueDate</code> property will include a time, when this is false, the time component of the date will be ignored. Defaults to true.","url":"https://docs.scriptable.app/reminder/#duedateincludestime","characteristics":[]},{"id":526,"headline":"Instance property","shortName":"identifier","longName":"identifier","subtitle":"string","decleration":"identifier: string","copyDecleration":"identifier","summary":"Identifier of reminder.","url":"https://docs.scriptable.app/reminder/#identifier","characteristics":["readOnly"]},{"id":529,"headline":"Instance property","shortName":"isCompleted","longName":"isCompleted","subtitle":"bool","decleration":"isCompleted: bool","copyDecleration":"isCompleted","summary":"Whether the reminder is completed.","url":"https://docs.scriptable.app/reminder/#iscompleted","characteristics":[]},{"id":530,"headline":"Instance property","shortName":"isOverdue","longName":"isOverdue","subtitle":"bool","decleration":"isOverdue: bool","copyDecleration":"isOverdue","summary":"Whether the reminder is overdue.","url":"https://docs.scriptable.app/reminder/#isoverdue","characteristics":["readOnly"]},{"id":528,"headline":"Instance property","shortName":"notes","longName":"notes","subtitle":"string","decleration":"notes: string","copyDecleration":"notes","summary":"Notes associated with reminder.","url":"https://docs.scriptable.app/reminder/#notes","characteristics":[]},{"id":531,"headline":"Instance property","shortName":"priority","longName":"priority","subtitle":"number","decleration":"priority: number","copyDecleration":"priority","summary":"Priority of reminder.","description":"Specifies the prirority of the reminder with 0 representing an undefined priority, 1 the highest priority, and 9 the lowest priority.","url":"https://docs.scriptable.app/reminder/#priority","characteristics":[]},{"id":527,"headline":"Instance property","shortName":"title","longName":"title","subtitle":"string","decleration":"title: string","copyDecleration":"title","summary":"Title of reminder.","url":"https://docs.scriptable.app/reminder/#title","characteristics":[]}]},{"title":"Methods","details":[{"id":537,"headline":"Instance method","shortName":"new Reminder","longName":"new Reminder()","decleration":"new Reminder()","copyDecleration":"new Reminder()","summary":"Constructs a reminder.","description":"In order to add the reminder to your calendar, you must call the save() function.","url":"https://docs.scriptable.app/reminder/#-new-reminder"},{"id":538,"headline":"Instance method","shortName":"addRecurrenceRule","longName":"-addRecurrenceRule(recurrenceRule)","decleration":"addRecurrenceRule(recurrenceRule: RecurrenceRule)","copyDecleration":"addRecurrenceRule(recurrenceRule)","summary":"Adds a recurrence rule.","description":"Recurrence rules specify when the reminder should be repeated. See the documentation of RecurrenceRule for more information on creating rules.","infoSections":[{"title":"Parameters","infos":[{"title":"recurrenceRule","subtitle":"RecurrenceRule","copyDecleration":"recurrenceRule","description":"Recurrence rule to add to the reminder."}]}],"url":"https://docs.scriptable.app/reminder/#-addrecurrencerule"},{"id":543,"headline":"Static method","shortName":"all","longName":"+all(calendars)","decleration":"static all(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"all(calendars)","summary":"Fetches all reminders.","description":"For performance reasons iOS limits fetched results to events within a four year timespan.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#all"},{"id":544,"headline":"Static method","shortName":"allCompleted","longName":"+allCompleted(calendars)","decleration":"static allCompleted(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"allCompleted(calendars)","summary":"Fetches all completed reminders.","description":"For performance reasons iOS limits fetched results to events within a four year timespan.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#allcompleted"},{"id":567,"headline":"Static method","shortName":"allDueBetween","longName":"+allDueBetween(startDate, endDate, calendars)","decleration":"static allDueBetween(startDate: Date, endDate: Date, calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"allDueBetween(startDate, endDate, calendars)","summary":"Fetches due reminders.","description":"Fetches reminders that are due within the time interval constituted by\nthe start and end dates.","infoSections":[{"title":"Parameters","infos":[{"title":"startDate","subtitle":"Date","copyDecleration":"startDate"},{"title":"endDate","subtitle":"Date","copyDecleration":"endDate"},{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#allduebetween"},{"id":561,"headline":"Static method","shortName":"allDueLastWeek","longName":"+allDueLastWeek(calendars)","decleration":"static allDueLastWeek(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"allDueLastWeek(calendars)","summary":"Fetches all reminders due last week.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#allduelastweek"},{"id":558,"headline":"Static method","shortName":"allDueNextWeek","longName":"+allDueNextWeek(calendars)","decleration":"static allDueNextWeek(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"allDueNextWeek(calendars)","summary":"Fetches all reminders due next week.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#allduenextweek"},{"id":555,"headline":"Static method","shortName":"allDueThisWeek","longName":"+allDueThisWeek(calendars)","decleration":"static allDueThisWeek(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"allDueThisWeek(calendars)","summary":"Fetches all reminders due this week.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#allduethisweek"},{"id":546,"headline":"Static method","shortName":"allDueToday","longName":"+allDueToday(calendars)","decleration":"static allDueToday(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"allDueToday(calendars)","summary":"Fetches all reminders due today.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#allduetoday"},{"id":549,"headline":"Static method","shortName":"allDueTomorrow","longName":"+allDueTomorrow(calendars)","decleration":"static allDueTomorrow(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"allDueTomorrow(calendars)","summary":"Fetches all reminders due tomorrow.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#allduetomorrow"},{"id":552,"headline":"Static method","shortName":"allDueYesterday","longName":"+allDueYesterday(calendars)","decleration":"static allDueYesterday(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"allDueYesterday(calendars)","summary":"Fetches all reminders due yesterday.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#alldueyesterday"},{"id":545,"headline":"Static method","shortName":"allIncomplete","longName":"+allIncomplete(calendars)","decleration":"static allIncomplete(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"allIncomplete(calendars)","summary":"Fetches all incomplete reminders.","description":"For performance reasons iOS limits fetched results to events within a four year timespan.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#allincomplete"},{"id":570,"headline":"Static method","shortName":"completedBetween","longName":"+completedBetween(startDate, endDate, calendars)","decleration":"static completedBetween(startDate: Date, endDate: Date, calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"completedBetween(startDate, endDate, calendars)","summary":"Fetches completed reminders.","description":"Fetches reminders that were completed within the time interval constituted by the start and end dates.","infoSections":[{"title":"Parameters","infos":[{"title":"startDate","subtitle":"Date","copyDecleration":"startDate"},{"title":"endDate","subtitle":"Date","copyDecleration":"endDate"},{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#completedbetween"},{"id":568,"headline":"Static method","shortName":"completedDueBetween","longName":"+completedDueBetween(startDate, endDate, calendars)","decleration":"static completedDueBetween(startDate: Date, endDate: Date, calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"completedDueBetween(startDate, endDate, calendars)","summary":"Fetches completed reminders.","description":"Fetches reminders that are completed and that were due within the time interval constituted by the start and end dates.","infoSections":[{"title":"Parameters","infos":[{"title":"startDate","subtitle":"Date","copyDecleration":"startDate"},{"title":"endDate","subtitle":"Date","copyDecleration":"endDate"},{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#completedduebetween"},{"id":562,"headline":"Static method","shortName":"completedDueLastWeek","longName":"+completedDueLastWeek(calendars)","decleration":"static completedDueLastWeek(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"completedDueLastWeek(calendars)","summary":"Fetches completed reminders due last week.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#completedduelastweek"},{"id":559,"headline":"Static method","shortName":"completedDueNextWeek","longName":"+completedDueNextWeek(calendars)","decleration":"static completedDueNextWeek(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"completedDueNextWeek(calendars)","summary":"Fetches completed reminders due next week.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#completedduenextweek"},{"id":556,"headline":"Static method","shortName":"completedDueThisWeek","longName":"+completedDueThisWeek(calendars)","decleration":"static completedDueThisWeek(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"completedDueThisWeek(calendars)","summary":"Fetches completed reminders due this week.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#completedduethisweek"},{"id":547,"headline":"Static method","shortName":"completedDueToday","longName":"+completedDueToday(calendars)","decleration":"static completedDueToday(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"completedDueToday(calendars)","summary":"Fetches completed reminders due today.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#completedduetoday"},{"id":550,"headline":"Static method","shortName":"completedDueTomorrow","longName":"+completedDueTomorrow(calendars)","decleration":"static completedDueTomorrow(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"completedDueTomorrow(calendars)","summary":"Fetches completed reminders due tomorrow.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#completedduetomorrow"},{"id":553,"headline":"Static method","shortName":"completedDueYesterday","longName":"+completedDueYesterday(calendars)","decleration":"static completedDueYesterday(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"completedDueYesterday(calendars)","summary":"Fetches completed reminders due yesterday.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#completeddueyesterday"},{"id":566,"headline":"Static method","shortName":"completedLastWeek","longName":"+completedLastWeek(calendars)","decleration":"static completedLastWeek(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"completedLastWeek(calendars)","summary":"Fetches reminders completed last week.","description":"Note that this does not take the due date into account. This will return all reminders that you have completed last week.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#completedlastweek"},{"id":565,"headline":"Static method","shortName":"completedThisWeek","longName":"+completedThisWeek(calendars)","decleration":"static completedThisWeek(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"completedThisWeek(calendars)","summary":"Fetches reminders completed this week.","description":"Note that this does not take the due date into account. This will return all reminders that you have completed this week.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#completedthisweek"},{"id":564,"headline":"Static method","shortName":"completedToday","longName":"+completedToday(calendars)","decleration":"static completedToday(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"completedToday(calendars)","summary":"Fetches reminders completed today.","description":"Note that this does not take the due date into account. This will return all reminders that you have completed today.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#completedtoday"},{"id":569,"headline":"Static method","shortName":"incompleteDueBetween","longName":"+incompleteDueBetween(startDate, endDate, calendars)","decleration":"static incompleteDueBetween(startDate: Date, endDate: Date, calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"incompleteDueBetween(startDate, endDate, calendars)","summary":"Fetches incomplete reminders.","description":"Fetches reminders that are incomplete and that were due within the time interval constituted by the start and end dates.","infoSections":[{"title":"Parameters","infos":[{"title":"startDate","subtitle":"Date","copyDecleration":"startDate"},{"title":"endDate","subtitle":"Date","copyDecleration":"endDate"},{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#incompleteduebetween"},{"id":563,"headline":"Static method","shortName":"incompleteDueLastWeek","longName":"+incompleteDueLastWeek(calendars)","decleration":"static incompleteDueLastWeek(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"incompleteDueLastWeek(calendars)","summary":"Fetches incomplete reminders due last week.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#incompleteduelastweek"},{"id":560,"headline":"Static method","shortName":"incompleteDueNextWeek","longName":"+incompleteDueNextWeek(calendars)","decleration":"static incompleteDueNextWeek(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"incompleteDueNextWeek(calendars)","summary":"Fetches incomplete reminders due next week.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#incompleteduenextweek"},{"id":557,"headline":"Static method","shortName":"incompleteDueThisWeek","longName":"+incompleteDueThisWeek(calendars)","decleration":"static incompleteDueThisWeek(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"incompleteDueThisWeek(calendars)","summary":"Fetches incomplete reminders due this week.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#incompleteduethisweek"},{"id":548,"headline":"Static method","shortName":"incompleteDueToday","longName":"+incompleteDueToday(calendars)","decleration":"static incompleteDueToday(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"incompleteDueToday(calendars)","summary":"Fetches incomplete reminders due today.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#incompleteduetoday"},{"id":551,"headline":"Static method","shortName":"incompleteDueTomorrow","longName":"+incompleteDueTomorrow(calendars)","decleration":"static incompleteDueTomorrow(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"incompleteDueTomorrow(calendars)","summary":"Fetches incomplete reminders due tomorrow.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#incompleteduetomorrow"},{"id":554,"headline":"Static method","shortName":"incompleteDueYesterday","longName":"+incompleteDueYesterday(calendars)","decleration":"static incompleteDueYesterday(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"incompleteDueYesterday(calendars)","summary":"Fetches incomplete reminders due yesterday.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#incompletedueyesterday"},{"id":541,"headline":"Instance method","shortName":"remove","longName":"-remove()","decleration":"remove()","copyDecleration":"remove()","summary":"Removes reminder from calendar.","url":"https://docs.scriptable.app/reminder/#-remove"},{"id":539,"headline":"Instance method","shortName":"removeAllRecurrenceRules","longName":"-removeAllRecurrenceRules()","decleration":"removeAllRecurrenceRules()","copyDecleration":"removeAllRecurrenceRules()","summary":"Removes all recurrence rules.","url":"https://docs.scriptable.app/reminder/#-removeallrecurrencerules"},{"id":540,"headline":"Instance method","shortName":"save","longName":"-save()","decleration":"save()","copyDecleration":"save()","summary":"Saves reminder.","description":"Saves changes to a reminder, inserting it into the calendar if it is newly created.","url":"https://docs.scriptable.app/reminder/#-save"},{"id":542,"headline":"Static method","shortName":"scheduled","longName":"+scheduled(calendars)","decleration":"static scheduled(calendars: [Calendar]): Promise<[Reminder]>","copyDecleration":"scheduled(calendars)","summary":"Fetches the schedule of reminders.","description":"The fetched result contains reminders that are due today and reminders that are overdue. This is similar to the reminders shown in the Reminders apps \"Scheduled\" list.\nFor performance reasons iOS limits fetched results to events within a four year timespan.","infoSections":[{"title":"Parameters","infos":[{"title":"calendars","subtitle":"[Calendar]","copyDecleration":"calendars","description":"Calendars to fetch reminders for. Defaults to all calendars."}]},{"title":"Return value","infos":[{"subtitle":"Promise<[Reminder]>","description":"Promise that provides the reminders when fulfilled."}]}],"url":"https://docs.scriptable.app/reminder/#scheduled"}]}],"summary":"Manages reminders in calendars.","description":"Used for creating, fetching and removing reminders from your calendars.","url":"https://docs.scriptable.app/reminder","pageId":7},{"id":571,"headline":"Type","shortName":"Request","longName":"Request","detailsSections":[{"title":"Properties","details":[{"id":579,"headline":"Instance property","shortName":"allowInsecureRequest","longName":"allowInsecureRequest","subtitle":"bool","decleration":"allowInsecureRequest: bool","copyDecleration":"allowInsecureRequest","summary":"Allow the request even if it is deemed insecure.","description":"By default Scriptable will attempt to reject requests that are deemed insecure.\n\nAs an example, Scriptable will reject communicating with a server that has an invalid certificate. Such servers might be malicious and may put confidentional information at risk. By enabling this setting, those requests will be allowed.\n\nEnable this setting at your own risk.","url":"https://docs.scriptable.app/request/#allowinsecurerequest","characteristics":[]},{"id":575,"headline":"Instance property","shortName":"body","longName":"body","subtitle":"any","decleration":"body: any","copyDecleration":"body","summary":"Body to send with the request.","description":"The body will be send along the request. While this property can be any value, currently only strings and Data is supported.\n\nBe aware that this property is ignored if you convert the request to a multipart request using <code>addParameterToMultipart</code>,\n<code>addFileToMultipart</code> or <code>addFileDataToMultipart</code>.","url":"https://docs.scriptable.app/request/#body","characteristics":[]},{"id":574,"headline":"Instance property","shortName":"headers","longName":"headers","subtitle":"{string: string}","decleration":"headers: {string: string}","copyDecleration":"headers","summary":"HTTP headers to send with the request.","description":"Key value pairs where the key is the name of an HTTP header and the value will be sent as the value for the HTTP header.","url":"https://docs.scriptable.app/request/#headers","characteristics":[]},{"id":573,"headline":"Instance property","shortName":"method","longName":"method","subtitle":"string","decleration":"method: string","copyDecleration":"method","summary":"HTTP method used for the request.","description":"Specifies the HTTP method to use when sending the request. The default is to send the request using the GET HTTP method.","url":"https://docs.scriptable.app/request/#method","characteristics":[]},{"id":577,"headline":"Instance property","shortName":"onRedirect","longName":"onRedirect","subtitle":"fn(Request) -> Request","decleration":"onRedirect: fn(Request) -> Request","copyDecleration":"onRedirect","summary":"Function called upon redirect.","description":"The function determines how redirects should be handled. By default redirects are allowed. When invoked the function is supplied with the request that we're about to redirect to. The function can return the request to continue redirecting or it can return another request to redirect to. Returning null will stop the redirect. Note that onRedirect will only be invoked on the initial request. Consecutive redirects should be handled on the initial request.","url":"https://docs.scriptable.app/request/#onredirect","characteristics":[]},{"id":578,"headline":"Instance property","shortName":"response","longName":"response","subtitle":"{string: any}","decleration":"response: {string: any}","copyDecleration":"response","summary":"Response of the request.","description":"The response is not populated until the request has been completed. The response is an object that looks like the following example.\n\n<code>{\n  \"url\": \"https://example.com/\",\n  \"statusCode\": 200\n  \"mimeType\": \"application/json\",\n  \"textEncodingName\": \"utf-8\",\n  \"headers\": {\n    \"Content-Type\": \"application/json;charset=utf-8\",\n    \"Content-Length\": \"17671\"\n  },\n  \"cookies\": [{\n    \"path\": \"/\",\n    \"httpOnly\": true,\n    \"domain\": \"www.example.com\",\n    \"sessionOnly\": true,\n    \"name\": \"JSESSIONID\",\n    \"value\": \"7616271F4878CFD05182D20C45F4CEB3\"\n  }]\n}</code>","url":"https://docs.scriptable.app/request/#response","characteristics":["readOnly"]},{"id":576,"headline":"Instance property","shortName":"timeoutInterval","longName":"timeoutInterval","subtitle":"number","decleration":"timeoutInterval: number","copyDecleration":"timeoutInterval","summary":"Timeout interval of the request.","description":"If a request remains idle for longer than the timeout interval, the request is considered timed out.\n\nThe timeout interval is measured in seconds and defaults to 60 seconds.","url":"https://docs.scriptable.app/request/#timeoutinterval","characteristics":[]},{"id":572,"headline":"Instance property","shortName":"url","longName":"url","subtitle":"string","decleration":"url: string","copyDecleration":"url","summary":"URL to send request to.","url":"https://docs.scriptable.app/request/#url","characteristics":[]}]},{"title":"Methods","details":[{"id":580,"headline":"Instance method","shortName":"new Request","longName":"new Request(url)","decleration":"new Request(url: string)","copyDecleration":"new Request(url)","summary":"Constructs a request.","description":"Constructs a new request that will be sent to the provided URL. The request is not sent until an appropriate load method is called, e.g. loadImage for downloading and interpreting the response as an image.","infoSections":[{"title":"Parameters","infos":[{"title":"url","subtitle":"string","copyDecleration":"url","description":"URL to send request to."}]}],"url":"https://docs.scriptable.app/request/#-new-request"},{"id":586,"headline":"Instance method","shortName":"addFileDataToMultipart","longName":"-addFileDataToMultipart(data, mimeType, name, filename)","decleration":"addFileDataToMultipart(data: Data, mimeType: string, name: string, filename: string)","copyDecleration":"addFileDataToMultipart(data, mimeType, name, filename)","summary":"Adds a file to a multipart request.","description":"Converts the request to a multipart request and adds the file to the request. Be aware that the <code>body</code> property on the request is ignored for multipart requests as parameters and files added to the request constitutes the body.\n\nCalling this function will make the request a multipart request. When the request is send, the content type will automatically be set to \"multipart/form-data\".","infoSections":[{"title":"Parameters","infos":[{"title":"data","subtitle":"Data","copyDecleration":"data","description":"File data to add."},{"title":"mimeType","subtitle":"string","copyDecleration":"mimeType","description":"MIME type of the file to add."},{"title":"name","subtitle":"string","copyDecleration":"name","description":"Name of the parameter which holds the file."},{"title":"filename","subtitle":"string","copyDecleration":"filename","description":"Name of the file."}]}],"url":"https://docs.scriptable.app/request/#-addfiledatatomultipart"},{"id":587,"headline":"Instance method","shortName":"addFileToMultipart","longName":"-addFileToMultipart(filePath, name, filename)","decleration":"addFileToMultipart(filePath: string, name: string, filename: string)","copyDecleration":"addFileToMultipart(filePath, name, filename)","summary":"Adds a file to a multipart request.","description":"Converts the request to a multipart request and adds the file to the request. The function will automatically determine the MIME type of the file as well as the filename. Be aware that the <code>body</code> property on the request is ignored for multipart requests as parameters and files added to the request constitutes the body.\n\nCalling this function will make the request a multipart request. When the request is send, the content type will automatically be set to \"multipart/form-data\".","infoSections":[{"title":"Parameters","infos":[{"title":"filePath","subtitle":"string","copyDecleration":"filePath","description":"Path of the file to add."},{"title":"name","subtitle":"string","copyDecleration":"name","description":"Name of the parameter which holds the file."},{"title":"filename","subtitle":"string","copyDecleration":"filename","description":"Optional name of the uploaded file."}]}],"url":"https://docs.scriptable.app/request/#-addfiletomultipart"},{"id":588,"headline":"Instance method","shortName":"addImageToMultipart","longName":"-addImageToMultipart(image, name, filename)","decleration":"addImageToMultipart(image: Image, name: string, filename: string)","copyDecleration":"addImageToMultipart(image, name, filename)","summary":"Adds an image to a multipart request.","description":"Converts the request to a multipart request and adds the image to the request. The function will automatically determine the MIME type of the file Be aware that the <code>body</code> property on the request is ignored for multipart requests as parameters and files added to the request constitutes the body.\n\nCalling this function will make the request a multipart request. When the request is send, the content type will automatically be set to \"multipart/form-data\".","infoSections":[{"title":"Parameters","infos":[{"title":"image","subtitle":"Image","copyDecleration":"image","description":"Image to add."},{"title":"name","subtitle":"string","copyDecleration":"name","description":"Name of the parameter which holds the file."},{"title":"filename","subtitle":"string","copyDecleration":"filename","description":"Optional name of the uploaded file."}]}],"url":"https://docs.scriptable.app/request/#-addimagetomultipart"},{"id":585,"headline":"Instance method","shortName":"addParameterToMultipart","longName":"-addParameterToMultipart(name, value)","decleration":"addParameterToMultipart(name: string, value: string)","copyDecleration":"addParameterToMultipart(name, value)","summary":"Adds a parameter to a multipart request.","description":"Converts the request to a multipart request and adds a parameter with the specified name and value. Be aware that the <code>body</code> property on the request is ignored for multipart requests as parameters and files added to the request constitutes the body.\n\nCalling this function will make the request a multipart request. When the request is send, the content type will automatically be set to \"multipart/form-data\".","infoSections":[{"title":"Parameters","infos":[{"title":"name","subtitle":"string","copyDecleration":"name","description":"Name of the parameter."},{"title":"value","subtitle":"string","copyDecleration":"value","description":"Value of the parameter."}]}],"url":"https://docs.scriptable.app/request/#-addparametertomultipart"},{"id":581,"headline":"Instance method","shortName":"load","longName":"-load()","decleration":"load(): Promise<Data>","copyDecleration":"load()","summary":"Sends request.","description":"Call to send the configured request to the specified URL. The raw response is provided when the returned promise is fulfilled.","infoSections":[{"title":"Return value","infos":[{"subtitle":"Promise<Data>","description":"Promise that provides the response as data when fulfilled."}]}],"url":"https://docs.scriptable.app/request/#-load"},{"id":584,"headline":"Instance method","shortName":"loadImage","longName":"-loadImage()","decleration":"loadImage(): Promise<Image>","copyDecleration":"loadImage()","summary":"Sends request and parses response as an image.","description":"Call to send the configured request to the specified URL. The response is expected to be an image.","infoSections":[{"title":"Return value","infos":[{"subtitle":"Promise<Image>","description":"Promise that provides the response as an image."}]}],"url":"https://docs.scriptable.app/request/#-loadimage"},{"id":583,"headline":"Instance method","shortName":"loadJSON","longName":"-loadJSON()","decleration":"loadJSON(): Promise<any>","copyDecleration":"loadJSON()","summary":"Sends request and parses response as JSON.","description":"Call to send the configured request to the specified URL. The response is expected to be a valid JSON string and is parsed into an object.","infoSections":[{"title":"Return value","infos":[{"subtitle":"Promise<any>","description":"Promise that provides the response as an object when fulfilled."}]}],"url":"https://docs.scriptable.app/request/#-loadjson"},{"id":582,"headline":"Instance method","shortName":"loadString","longName":"-loadString()","decleration":"loadString(): Promise<string>","copyDecleration":"loadString()","summary":"Sends request and parses response as a string.","description":"Call to send the configured request to the specified URL. The response is parsed to a string and provided when the returned promise is fulfilled.","infoSections":[{"title":"Return value","infos":[{"subtitle":"Promise<string>","description":"Promise that provides the response as a string when fulfilled."}]}],"url":"https://docs.scriptable.app/request/#-loadstring"}]}],"summary":"Performs HTTP requests.","description":"Performs a URL request and returns the response in an appropriate format.","url":"https://docs.scriptable.app/request","pageId":7},{"id":589,"headline":"Type","shortName":"SFSymbol","longName":"SFSymbol","detailsSections":[{"title":"Properties","details":[{"id":590,"headline":"Instance property","shortName":"image","longName":"image","subtitle":"Image","decleration":"image: Image","copyDecleration":"image","summary":"Convert the symbol to an image.","url":"https://docs.scriptable.app/sfsymbol/#image","characteristics":["readOnly"]}]},{"title":"Methods","details":[{"id":601,"headline":"Instance method","shortName":"applyBlackWeight","longName":"-applyBlackWeight()","decleration":"applyBlackWeight()","copyDecleration":"applyBlackWeight()","summary":"Configures the symbol to use an black weight.","url":"https://docs.scriptable.app/sfsymbol/#-applyblackweight"},{"id":599,"headline":"Instance method","shortName":"applyBoldWeight","longName":"-applyBoldWeight()","decleration":"applyBoldWeight()","copyDecleration":"applyBoldWeight()","summary":"Configures the symbol to use an bold weight.","url":"https://docs.scriptable.app/sfsymbol/#-applyboldweight"},{"id":592,"headline":"Instance method","shortName":"applyFont","longName":"-applyFont(font)","decleration":"applyFont(font: Font)","copyDecleration":"applyFont(font)","summary":"Configures the symbol with the specified font information.","infoSections":[{"title":"Parameters","infos":[{"title":"font","subtitle":"Font","copyDecleration":"font"}]}],"url":"https://docs.scriptable.app/sfsymbol/#-applyfont"},{"id":600,"headline":"Instance method","shortName":"applyHeavyWeight","longName":"-applyHeavyWeight()","decleration":"applyHeavyWeight()","copyDecleration":"applyHeavyWeight()","summary":"Configures the symbol to use an heavy weight.","url":"https://docs.scriptable.app/sfsymbol/#-applyheavyweight"},{"id":595,"headline":"Instance method","shortName":"applyLightWeight","longName":"-applyLightWeight()","decleration":"applyLightWeight()","copyDecleration":"applyLightWeight()","summary":"Configures the symbol to use an light weight.","url":"https://docs.scriptable.app/sfsymbol/#-applylightweight"},{"id":597,"headline":"Instance method","shortName":"applyMediumWeight","longName":"-applyMediumWeight()","decleration":"applyMediumWeight()","copyDecleration":"applyMediumWeight()","summary":"Configures the symbol to use an medium weight.","url":"https://docs.scriptable.app/sfsymbol/#-applymediumweight"},{"id":596,"headline":"Instance method","shortName":"applyRegularWeight","longName":"-applyRegularWeight()","decleration":"applyRegularWeight()","copyDecleration":"applyRegularWeight()","summary":"Configures the symbol to use an regular weight.","url":"https://docs.scriptable.app/sfsymbol/#-applyregularweight"},{"id":598,"headline":"Instance method","shortName":"applySemiboldWeight","longName":"-applySemiboldWeight()","decleration":"applySemiboldWeight()","copyDecleration":"applySemiboldWeight()","summary":"Configures the symbol to use an semibold weight.","url":"https://docs.scriptable.app/sfsymbol/#-applysemiboldweight"},{"id":594,"headline":"Instance method","shortName":"applyThinWeight","longName":"-applyThinWeight()","decleration":"applyThinWeight()","copyDecleration":"applyThinWeight()","summary":"Configures the symbol to use an thin weight.","url":"https://docs.scriptable.app/sfsymbol/#-applythinweight"},{"id":593,"headline":"Instance method","shortName":"applyUltraLightWeight","longName":"-applyUltraLightWeight()","decleration":"applyUltraLightWeight()","copyDecleration":"applyUltraLightWeight()","summary":"Configures the symbol to use an ultra light weight.","url":"https://docs.scriptable.app/sfsymbol/#-applyultralightweight"},{"id":591,"headline":"Static method","shortName":"named","longName":"+named(symbolName)","decleration":"static named(symbolName: string): SFSymbol","copyDecleration":"named(symbolName)","summary":"Constructs a SF symbol.","description":"SF symbols are Apple's configurable icons that are designed to look great with the San Francisco font.\n\nSymbols are referenced by their name. You can find the symbol names in <a href=\"https://developer.apple.com/sf-symbols/\">Apple's SF Symbols app for macOS</a>. You can also browse symbol names in the <a href=\"https://apps.apple.com/us/app/sf-symbols-browser/id1491161336\">SF Symbols Browser</a> and <a href=\"https://apps.apple.com/us/app/san-fransymbols/id1504761986\">San Fransymbols</a> apps for iOS.","infoSections":[{"title":"Parameters","infos":[{"title":"symbolName","subtitle":"string","copyDecleration":"symbolName","description":"Name of the symbol."}]},{"title":"Return value","infos":[{"subtitle":"SFSymbol","description":"Constructed SF symbol or null if no symbol with the name exists."}]}],"url":"https://docs.scriptable.app/sfsymbol/#named"}]}],"summary":"Representation of a SF symbol.","description":"SF symbols are Apple's configurable icons that are designed to look great with the San Francisco font.\n\nSymbols are referenced by their name. You can find the symbol names in <a href=\"https://developer.apple.com/sf-symbols/\">Apple's SF Symbols app for macOS</a>. You can also browse symbol names in the <a href=\"https://apps.apple.com/us/app/sf-symbols-browser/id1491161336\">SF Symbols Browser</a> and <a href=\"https://apps.apple.com/us/app/san-fransymbols/id1504761986\">San Fransymbols</a> apps for iOS.","url":"https://docs.scriptable.app/sfsymbol","pageId":7},{"id":602,"headline":"Type","shortName":"Safari","longName":"Safari","detailsSections":[{"title":"Methods","details":[{"id":604,"headline":"Static method","shortName":"open","longName":"+open(url)","decleration":"static open(url: string)","copyDecleration":"open(url)","summary":"Presents a website.","description":"Presents a website in the Safari app, thus leaving the current app.","infoSections":[{"title":"Parameters","infos":[{"title":"url","subtitle":"string","copyDecleration":"url","description":"URL of website to present."}]}],"url":"https://docs.scriptable.app/safari/#open"},{"id":603,"headline":"Static method","shortName":"openInApp","longName":"+openInApp(url, fullscreen)","decleration":"static openInApp(url: string, fullscreen: bool): Promise","copyDecleration":"openInApp(url, fullscreen)","summary":"Presents a website in-app.","description":"Presents a website without leaving the app.","infoSections":[{"title":"Parameters","infos":[{"title":"url","subtitle":"string","copyDecleration":"url","description":"URL of website to present."},{"title":"fullscreen","subtitle":"bool","copyDecleration":"fullscreen","description":"Optional. Set to true to display the web view in fullsceen. This only has an effect when used within the app. Defaults to true."}]},{"title":"Return value","infos":[{"subtitle":"Promise"}]}],"url":"https://docs.scriptable.app/safari/#openinapp"}]}],"summary":"Presents a website.","description":"Presents a website either in-app or by leaving the app an opening the Safari app.","url":"https://docs.scriptable.app/safari","pageId":7},{"id":605,"headline":"Type","shortName":"Script","longName":"Script","detailsSections":[{"title":"Methods","details":[{"id":607,"headline":"Static method","shortName":"complete","longName":"+complete()","decleration":"static complete()","copyDecleration":"complete()","summary":"Informs the system about script completion.","description":"Call this function to inform the system that the script has completed running.\n\nWhen a script is run inside Siri and the Shortcuts app, Scriptable use heuristics to determine if the script has completed. If you find that a script takes too long to complete, you can manually call the <code>complete</code> function to stop the execution. Note that this should be done as the very last action the script performs.\n\nWhen the script is run from a share sheet, the <code>complete</code> function will complete execution and dismiss the presented view.","url":"https://docs.scriptable.app/script/#complete"},{"id":606,"headline":"Static method","shortName":"name","longName":"+name()","decleration":"static name(): string","copyDecleration":"name()","summary":"Name of the script.","infoSections":[{"title":"Return value","infos":[{"subtitle":"string"}]}],"url":"https://docs.scriptable.app/script/#name"},{"id":608,"headline":"Static method","shortName":"setShortcutOutput","longName":"+setShortcutOutput(value)","decleration":"static setShortcutOutput(value: any)","copyDecleration":"setShortcutOutput(value)","summary":"Sets output when running the script as a shortcut action.","description":"Use this function to pass values to other actions in the Shortcuts app. The output can be a text, a number, a boolean, a dictionary or a file path pointing to a file stored in iCloud.\n\nYou can also use JavaScript's <code>return</code> keyword to output a value to a shortcut.","infoSections":[{"title":"Parameters","infos":[{"title":"value","subtitle":"any","copyDecleration":"value","description":"Value to provide as output."}]}],"url":"https://docs.scriptable.app/script/#setshortcutoutput"},{"id":609,"headline":"Static method","shortName":"setWidget","longName":"+setWidget(widget)","decleration":"static setWidget(widget: any)","copyDecleration":"setWidget(widget)","summary":"Sets the widget to be displayed.","infoSections":[{"title":"Parameters","infos":[{"title":"widget","subtitle":"any","copyDecleration":"widget","description":"Widget to display."}]}],"url":"https://docs.scriptable.app/script/#setwidget"}]}],"summary":"Access information about the script.","description":"Allows for accessing information about the script that is currently being run and controlling selected parts of the script execution.","url":"https://docs.scriptable.app/script","pageId":7},{"id":610,"headline":"Type","shortName":"ShareSheet","longName":"ShareSheet","detailsSections":[{"title":"Methods","details":[{"id":611,"headline":"Static method","shortName":"present","longName":"+present(activityItems)","decleration":"static present(activityItems: [any]): Promise<{string: any}>","copyDecleration":"present(activityItems)","summary":"Presents the activity picker.","description":"Presents a share sheet with an array of items to share. The activities included in the presented sheet will vary based\non the type of item.","infoSections":[{"title":"Parameters","infos":[{"title":"activityItems","subtitle":"[any]","copyDecleration":"activityItems","description":"Items to perform activity on."}]},{"title":"Return value","infos":[{"subtitle":"Promise<{string: any}>","description":"Promise carrying a value that tells which activity that was performed, if any. The promise is fulfilled when the sheet is dismissed."}]}],"url":"https://docs.scriptable.app/sharesheet/#present"}]}],"summary":"Offers standard activities to perform on items.","description":"The activity picker presents activities that can be performed on a set of items. For example sending an item via an email or SMS, saving an item to disk or opening\nan item in a third party app.\nAvailable activites vary depending on the provided items.","url":"https://docs.scriptable.app/sharesheet","pageId":7},{"id":612,"headline":"Type","shortName":"Size","longName":"Size","detailsSections":[{"title":"Properties","details":[{"id":614,"headline":"Instance property","shortName":"height","longName":"height","subtitle":"number","decleration":"height: number","copyDecleration":"height","summary":"Height value.","url":"https://docs.scriptable.app/size/#height","characteristics":[]},{"id":613,"headline":"Instance property","shortName":"width","longName":"width","subtitle":"number","decleration":"width: number","copyDecleration":"width","summary":"Width value.","url":"https://docs.scriptable.app/size/#width","characteristics":[]}]},{"title":"Methods","details":[{"id":615,"headline":"Instance method","shortName":"new Size","longName":"new Size(width, height)","decleration":"new Size(width: number, height: number)","copyDecleration":"new Size(width, height)","summary":"Constructs a new size.","infoSections":[{"title":"Parameters","infos":[{"title":"width","subtitle":"number","copyDecleration":"width","description":"Width value."},{"title":"height","subtitle":"number","copyDecleration":"height","description":"Height value."}]}],"url":"https://docs.scriptable.app/size/#-new-size"}]}],"summary":"Structure representing a size.","description":"The structure has a width and a height to specify a two-dimensional size.","url":"https://docs.scriptable.app/size","pageId":7},{"id":616,"headline":"Type","shortName":"Speech","longName":"Speech","detailsSections":[{"title":"Methods","details":[{"id":617,"headline":"Static method","shortName":"speak","longName":"+speak(text)","decleration":"static speak(text: string)","copyDecleration":"speak(text)","description":"Speaks a text.","infoSections":[{"title":"Parameters","infos":[{"title":"text","subtitle":"string","copyDecleration":"text","description":"Text to speak."}]}],"url":"https://docs.scriptable.app/speech/#speak"}]}],"summary":"Speaks a text.","description":"If used in a script triggered by a Siri Shortcut, Siri will speak the text.","url":"https://docs.scriptable.app/speech","pageId":7},{"id":618,"headline":"Type","shortName":"Timer","longName":"Timer","detailsSections":[{"title":"Properties","details":[{"id":620,"headline":"Instance property","shortName":"repeats","longName":"repeats","subtitle":"bool","decleration":"repeats: bool","copyDecleration":"repeats","summary":"Whether the timer should repeat.","description":"A repeating timer will keep firing until it is invalidated. In contrast to non-repeating timers, repeating timers are not automatically invalidated. Defaults to false.","url":"https://docs.scriptable.app/timer/#repeats","characteristics":[]},{"id":619,"headline":"Instance property","shortName":"timeInterval","longName":"timeInterval","subtitle":"number","decleration":"timeInterval: number","copyDecleration":"timeInterval","summary":"The frequency at which the timer fires, in milliseconds.","description":"Be aware that the time interval is specified in setting. Defaults to 0, causing the timer to fire instantly.","url":"https://docs.scriptable.app/timer/#timeinterval","characteristics":[]}]},{"title":"Methods","details":[{"id":621,"headline":"Instance method","shortName":"new Timer","longName":"new Timer()","decleration":"new Timer()","copyDecleration":"new Timer()","summary":"Constructs a timer.","description":"Constructs a timer that fires after a specified time interval.","url":"https://docs.scriptable.app/timer/#-new-timer"},{"id":623,"headline":"Instance method","shortName":"invalidate","longName":"-invalidate()","decleration":"invalidate()","copyDecleration":"invalidate()","summary":"Stops the timer from firing.","description":"Stops the timer from firing ever again. Non-repeating timers are automatically invalidated after they have fired once. Repeating timers must be manually invalidated.","url":"https://docs.scriptable.app/timer/#-invalidate"},{"id":622,"headline":"Instance method","shortName":"schedule","longName":"-schedule(callback)","decleration":"schedule(callback: fn())","copyDecleration":"schedule(callback)","summary":"Schedules the timer.","description":"Schedules the timer using its configuration. The supplied function is called when the timer fires. To stop the timer from firing, call the <code>invalidate()</code> function.","infoSections":[{"title":"Parameters","infos":[{"title":"callback","subtitle":"fn()","copyDecleration":"callback","description":"The callback to be called when the timer fires."}]}],"url":"https://docs.scriptable.app/timer/#-schedule"},{"id":624,"headline":"Static method","shortName":"schedule","longName":"+schedule(timeInterval, repeats, callback)","decleration":"static schedule(timeInterval: number, repeats: bool, callback: fn()): Timer","copyDecleration":"schedule(timeInterval, repeats, callback)","summary":"Schedules a timer.","description":"This is a convenience function for creating a new timer. The created timer is instantly scheduled and will fire after the specified time interval.","infoSections":[{"title":"Parameters","infos":[{"title":"timeInterval","subtitle":"number","copyDecleration":"timeInterval","description":"The time interval to fire the timer at."},{"title":"repeats","subtitle":"bool","copyDecleration":"repeats","description":"Whether the timer should repeat or not."},{"title":"callback","subtitle":"fn()","copyDecleration":"callback","description":"The callback to be called when the timer fires."}]},{"title":"Return value","infos":[{"subtitle":"Timer","description":"The constructed timer."}]}],"url":"https://docs.scriptable.app/timer/#schedule"}]}],"summary":"A timer that fires after a time interval has elapsed.","description":"The timer fires after a specified time interval has elapsed. The timer can be repeating in which case it will fire multiple times.","url":"https://docs.scriptable.app/timer","pageId":7}]}