{"pageId":9,"details":[{"id":742,"headline":"Type","shortName":"WidgetText","longName":"WidgetText","detailsSections":[{"title":"Properties","details":[{"id":745,"headline":"Instance property","shortName":"font","longName":"font","subtitle":"Font","decleration":"font: Font","copyDecleration":"font","summary":"Font and text size of the text.","url":"https://docs.scriptable.app/widgettext/#font","characteristics":[]},{"id":747,"headline":"Instance property","shortName":"lineLimit","longName":"lineLimit","subtitle":"number","decleration":"lineLimit: number","copyDecleration":"lineLimit","summary":"Maximum number of lines.","description":"Maximum number of lines to display. The limit is disabled when the value is 0 or less. Defaults to 0.","url":"https://docs.scriptable.app/widgettext/#linelimit","characteristics":[]},{"id":748,"headline":"Instance property","shortName":"minimumScaleFactor","longName":"minimumScaleFactor","subtitle":"number","decleration":"minimumScaleFactor: number","copyDecleration":"minimumScaleFactor","summary":"Minimum amount the text scales down to.","description":"Sets the minimum amount that text scales down to fit in the available space. For example, a text with a minimum scale factor of 0.5 allows the widget to draw the text in a font size half the size of the actual font. The scale factor should be a fraction between 0 and 1, both inclusive. Defaults to 1.","url":"https://docs.scriptable.app/widgettext/#minimumscalefactor","characteristics":[]},{"id":749,"headline":"Instance property","shortName":"shadowColor","longName":"shadowColor","subtitle":"Color","decleration":"shadowColor: Color","copyDecleration":"shadowColor","summary":"Color of the shadow.","description":"Sets the color of the shadow cast by the text. The <code>shadowRadius</code> property must have a value greater than zero for this property to have an effect. Defaults to black.","url":"https://docs.scriptable.app/widgettext/#shadowcolor","characteristics":[]},{"id":751,"headline":"Instance property","shortName":"shadowOffset","longName":"shadowOffset","subtitle":"Point","decleration":"shadowOffset: Point","copyDecleration":"shadowOffset","summary":"Offset of the shadow.","description":"Sets the offset of the shadow cast by the text. The <code>shadowRadius</code> property must have a value greater than zero for this property to have an effect. Defaults to (0, 0).","url":"https://docs.scriptable.app/widgettext/#shadowoffset","characteristics":[]},{"id":750,"headline":"Instance property","shortName":"shadowRadius","longName":"shadowRadius","subtitle":"number","decleration":"shadowRadius: number","copyDecleration":"shadowRadius","summary":"Size of the shadow.","description":"Sets the size of the shadow cast by the text. Defaults to 0.","url":"https://docs.scriptable.app/widgettext/#shadowradius","characteristics":[]},{"id":743,"headline":"Instance property","shortName":"text","longName":"text","subtitle":"string","decleration":"text: string","copyDecleration":"text","summary":"Text to show in a widget.","url":"https://docs.scriptable.app/widgettext/#text","characteristics":[]},{"id":744,"headline":"Instance property","shortName":"textColor","longName":"textColor","subtitle":"Color","decleration":"textColor: Color","copyDecleration":"textColor","summary":"Color of the text.","url":"https://docs.scriptable.app/widgettext/#textcolor","characteristics":[]},{"id":746,"headline":"Instance property","shortName":"textOpacity","longName":"textOpacity","subtitle":"number","decleration":"textOpacity: number","copyDecleration":"textOpacity","summary":"Opacity of the text.","description":"Opacity of the text. This must be a value between 0 and 1. Defaults to 1.","url":"https://docs.scriptable.app/widgettext/#textopacity","characteristics":[]},{"id":752,"headline":"Instance property","shortName":"url","longName":"url","subtitle":"string","decleration":"url: string","copyDecleration":"url","summary":"URL to open.","description":"The URL will be opened when the text is tapped. This is only supported in medium and large widgets. Small widgets can only have a single tap target, which is specified by the <code>url</code> on the widget.","url":"https://docs.scriptable.app/widgettext/#url","characteristics":[]}]},{"title":"Methods","details":[{"id":754,"headline":"Instance method","shortName":"centerAlignText","longName":"-centerAlignText()","decleration":"centerAlignText()","copyDecleration":"centerAlignText()","summary":"Center aligns the text.","description":"Specifies that text should be center aligned.\n\nThis does not affect texts placed in stacks. Use spacers instead when aligning text in stacks. To align the text in the center of a horizontal stack, you should place a spacer both before and after the text.","url":"https://docs.scriptable.app/widgettext/#-centeraligntext"},{"id":753,"headline":"Instance method","shortName":"leftAlignText","longName":"-leftAlignText()","decleration":"leftAlignText()","copyDecleration":"leftAlignText()","summary":"Left aligns the text.","description":"Specifies that text should be left aligned. This is the default.\n\nThis does not affect texts placed in stacks. Use spacers instead when aligning text in stacks. To align the text to left right in a horizontal stack, you should place a spacer after the text.","url":"https://docs.scriptable.app/widgettext/#-leftaligntext"},{"id":755,"headline":"Instance method","shortName":"rightAlignText","longName":"-rightAlignText()","decleration":"rightAlignText()","copyDecleration":"rightAlignText()","summary":"Right aligns the text.","description":"Specifies that text should be right aligned.\n\nThis does not affect texts placed in stacks. Use spacers instead when aligning text in stacks. To align the text to the right in a horizontal stack, you should place a spacer before the text.","url":"https://docs.scriptable.app/widgettext/#-rightaligntext"}]}],"summary":"Text element shown in a widget.","description":"A text shown in a widget. You do not create instances of this element directly. Instead you should call <code>addText()</code> on an instance of a <code>ListWidget</code>.","url":"https://docs.scriptable.app/widgettext","pageId":9},{"id":756,"headline":"Type","shortName":"XMLParser","longName":"XMLParser","detailsSections":[{"title":"Properties","details":[{"id":758,"headline":"Instance property","shortName":"didEndDocument","longName":"didEndDocument","subtitle":"fn()","decleration":"didEndDocument: fn()","copyDecleration":"didEndDocument","summary":"Function called when the parser ends parsing a document.","description":"When the parser calls the function, it has successfully completed parsing the document.","url":"https://docs.scriptable.app/xmlparser/#didenddocument","characteristics":[]},{"id":760,"headline":"Instance property","shortName":"didEndElement","longName":"didEndElement","subtitle":"fn(string)","decleration":"didEndElement: fn(string)","copyDecleration":"didEndElement","summary":"Function called when ended parsing an element.","description":"Called by the parser when it encounters an end tag for an element. The function takes the element name as a parameter.","url":"https://docs.scriptable.app/xmlparser/#didendelement","characteristics":[]},{"id":757,"headline":"Instance property","shortName":"didStartDocument","longName":"didStartDocument","subtitle":"fn()","decleration":"didStartDocument: fn()","copyDecleration":"didStartDocument","summary":"Function called when the parser begins parsing a document.","url":"https://docs.scriptable.app/xmlparser/#didstartdocument","characteristics":[]},{"id":759,"headline":"Instance property","shortName":"didStartElement","longName":"didStartElement","subtitle":"fn(string, {string: string})","decleration":"didStartElement: fn(string, {string: string})","copyDecleration":"didStartElement","summary":"Function called when starting to parse an element.","description":"Called by the parser when it encounters a start tag for an element. The function takes the element name as a parameter as well as a key value pair containing all the attributes associated with the element.\n\nUse this function to update your state and prepare for receiving the characters of the element. After this function is called, the parser will call the foundCharacters callback function with all or parts of the characters of the element.","url":"https://docs.scriptable.app/xmlparser/#didstartelement","characteristics":[]},{"id":761,"headline":"Instance property","shortName":"foundCharacters","longName":"foundCharacters","subtitle":"fn(string)","decleration":"foundCharacters: fn(string)","copyDecleration":"foundCharacters","summary":"Function called when the parser finds characters of an element.","description":"The parser calls this function with a string whenever it finds characters for the current element. This function may be called several times for a single element.","url":"https://docs.scriptable.app/xmlparser/#foundcharacters","characteristics":[]},{"id":762,"headline":"Instance property","shortName":"parseErrorOccurred","longName":"parseErrorOccurred","subtitle":"fn(string)","decleration":"parseErrorOccurred: fn(string)","copyDecleration":"parseErrorOccurred","summary":"Function called when the parser encounters an error.","description":"The parser will call this function when it encounters a fatal error preventing it from continuing to parse. When the function is called the parsing is stopped.","url":"https://docs.scriptable.app/xmlparser/#parseerroroccurred","characteristics":[]},{"id":763,"headline":"Instance property","shortName":"string","longName":"string","subtitle":"string","decleration":"string: string","copyDecleration":"string","summary":"XML string to be parsed.","url":"https://docs.scriptable.app/xmlparser/#string","characteristics":[]}]},{"title":"Methods","details":[{"id":764,"headline":"Instance method","shortName":"new XMLParser","longName":"new XMLParser(string)","decleration":"new XMLParser(string: string)","copyDecleration":"new XMLParser(string)","summary":"Constructs an XMLParser.","description":"Constructs an event driven XML parser. It does not do any parsing on its own and therefore the callback functions must be set before starting to parse.","infoSections":[{"title":"Parameters","infos":[{"title":"string","subtitle":"string","copyDecleration":"string","description":"XML string to be parsed."}]}],"url":"https://docs.scriptable.app/xmlparser/#-new-xmlparser"},{"id":765,"headline":"Instance method","shortName":"parse","longName":"-parse()","decleration":"parse(): bool","copyDecleration":"parse()","summary":"Starts parsing.","description":"Before calling this function you should ensure that the parser is correctly configured, i.e. the necessary callback functions should be set.","infoSections":[{"title":"Return value","infos":[{"subtitle":"bool","description":"Whether parsing was successfully started."}]}],"url":"https://docs.scriptable.app/xmlparser/#-parse"}]}],"summary":"Event driven XML parser.","description":"The XMLParser is an event driven XML parser that calls provided callback functions when it encounters elements to be parsed. It does not iself do any parsing.","url":"https://docs.scriptable.app/xmlparser","pageId":9},{"id":766,"headline":"Function","shortName":"importModule","longName":"importModule","decleration":"importModule(name: string)","copyDecleration":"importModule(name: string)","infoSections":[{"title":"Parameters","infos":[{"title":"name","subtitle":"string","copyDecleration":"name","description":"Name of the module to import."}]}],"summary":"Imports module with specified name.","description":"Modules are imported by specifying the name of the file. For example, to import the file <code>foo.js</code>, call <code>importModule('foo')</code>. Including the file extension is optional. Scriptable will look for modules in the following directories, in order:\n\n1. Relative to the file the module is imported into.\n2. In Scriptables folder in iCloud if you have iCloud Drive enabled. This folder is accessible from the Files app.\n3. In Scriptables \"app group\" folder which is not accessible to the user but your scripts are stored in this folder if you do not have iCloud Drive enabled.\n4. In Scriptables local folder. This folder is accessible from the Files app.\n\nYou can specify a file path rather than the name of a file e.g. <code>importModule('/lib/foo')</code>. If the path points to a directory, Scriptable will look for a file named <code>index.js</code> in the directory.\n\nThe <code>importModule</code> function returns <code>module.exports</code> of the imported module.\n\nConsider the following file.\n\n<code>let circle = importModule('circle')\nlet r = 2\nlet area = circle.area(r)\nlog('Area of circle: ' + area)</code>\n\nThe file imports the module <code>circle.js</code> which has the following contents.\n\n<code>module.exports.area = (r) => {\n  return Math.PI * Math.pow(r, 2)\n}\n\nmodule.exports.circumference = (r) => {\n  return 2 * Math.PI * r\n}</code>\n\nThe <code>circle.js</code> module exports the functions <code>area</code> and <code>circumference</code>.\n\nFor more information about modules, refer to the documentation on the <code>module</code> variable.","url":"https://docs.scriptable.app/importmodule","pageId":9}]}